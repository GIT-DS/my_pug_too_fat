/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const Player = __webpack_require__(/*! ./scripts/player.js */ \"./src/scripts/player.js\");\n\nconst Frames = __webpack_require__(/*! ./scripts/frame.js */ \"./src/scripts/frame.js\");\n\nlet titanic = new Audio('src/titanic.mp3');\n\nconst WindCircle = __webpack_require__(/*! ./scripts/windCircles.js */ \"./src/scripts/windCircles.js\");\n\nconst Wind = __webpack_require__(/*! ./scripts/wind.js */ \"./src/scripts/wind.js\");\n\nlet pug = new Image();\npug.src = \"./src/scripts/small.png\";\nlet reverse = new Image();\nreverse.src = \"src/reverse.png\";\nlet revWidth = reverse.width / 6;\nlet revHeight = reverse.height / 6;\nlet player; // let players = []\n// player = players[0]\n\nlet currentFrame = 0;\nlet frames = [];\nconst backgrounds = ['src/img/1.jpg', 'src/img/2.jpg', 'src/img/3.jpg', 'src/img/4.jpg', 'src/img/5.jpg', 'src/img/6.jpg', 'src/img/7.jpg', 'src/img/8.jpg', 'src/img/9.jpg', 'src/img/11.jpg', 'src/img/12.jpg', 'src/img/14.jpg', 'src/img/15.jpg', 'src/img/16.jpg', 'src/img/17.jpg', 'src/img/18.jpg', 'src/img/19.jpg', 'src/img/20.jpg', 'src/img/last.jpg'];\nlet background = new Image();\nbackground.src = backgrounds[0];\nlet backgroundIdx = 0;\nlet falls = 0;\nlet wind;\nlet windCircle;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById('game');\n  canvas.width = 1600;\n  canvas.height = 1000;\n  let c = canvas.getContext('2d');\n  window.context = c;\n  window.canvas = canvas;\n  firstFrame = new Frames(0);\n  frames.push(firstFrame);\n  wind = new Wind();\n  windCircle = new WindCircle(canvas.width / 2, canvas.height / 2, 1, 100);\n  window.setInterval(drawAll, 10);\n});\nlet players = [];\n\npug.onload = () => {\n  if (players.length != 1) {\n    player = new Player(300, canvas.height - 500, pug);\n    players.push(player);\n    players[0].bindInputs();\n  }\n};\n\nfunction objectCollision(player, object) {\n  if (inRangeY(player, object)) {\n    if (inRangeX(player, object)) {\n      player.dy = -player.originalDy;\n    }\n  }\n}\n\nfunction drawAll() {\n  window.context.clearRect(0, 0, canvas.width, canvas.height);\n  window.context.font = \"30px Arial\";\n  window.context.drawImage(background, 0, 0, canvas.width, canvas.height); // console.log(player)\n\n  if (player.y < 0) {\n    backgroundIdx += 1;\n    background.src = backgrounds[backgroundIdx % backgrounds.length];\n    let lastFramePlats = getLastFrame(currentFrame).plats;\n    let lastPlat = lastFramePlats[lastFramePlats.length - 1];\n    currentFrame += 1;\n\n    if (!frames[currentFrame]) {\n      newFrame = new Frames(currentFrame, lastPlat);\n      frames.push(newFrame);\n    }\n\n    player.y += canvas.height;\n  } else if (player.y > canvas.height) {\n    backgroundIdx -= 1;\n    background.src = backgrounds[backgroundIdx % backgrounds.length];\n    currentFrame -= 1;\n    player.y = 0;\n  }\n\n  frames[currentFrame].plats.forEach(plat => {\n    plat.draw();\n    objectCollision(player, plat);\n  });\n  collideSide(player);\n\n  if (player.dy > 25) {\n    titanic.currentTime = 2;\n    titanic.play();\n    falls++;\n  }\n\n  window.context.fillText(\"Fall Distance: \", 10, 50);\n  window.context.fillText(falls, 200, 50); // if (currentFrame % 5 === 0){\n  //     wind.draw();\n  //     player.windEffect(wind.state);\n  // }\n  // reverse key directions\n\n  if (currentFrame % 4 === 0) {\n    window.context.globalAlpha = 0.5;\n    window.context.drawImage(reverse, 50, 80, revWidth, revHeight);\n    window.context.globalAlpha = 1;\n    player.rev = -1;\n  } else {\n    player.rev = 1;\n  }\n\n  player.draw();\n}\n\nfunction getLastFrame(currentFrame) {\n  return frames[currentFrame];\n}\n\nfunction inRangeX(player, object) {\n  let playerStart = player.x;\n  let playerEnd = player.x + player.width;\n  let objectStart = object.x;\n  let objectEnd = object.x + object.width;\n\n  if (playerStart < objectStart && playerStart < objectEnd && playerEnd < objectStart && playerEnd < objectEnd || playerStart > objectStart && playerStart > objectEnd && playerEnd > objectStart && playerEnd > objectEnd) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction inRangeY(player, object) {\n  let playerStart = player.y;\n  let playerEnd = player.y + player.height;\n  let objectStart = object.y;\n  let objectEnd = object.y + object.height;\n\n  if (playerStart < objectStart && playerStart < objectEnd && playerEnd < objectStart && playerEnd < objectEnd || playerStart > objectStart && playerStart > objectEnd && playerEnd > objectStart && playerEnd > objectEnd) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction collideSide(player) {\n  if (player.x + player.width + player.dy > canvas.width) {\n    player.x = canvas.width - player.width; // player.dx = player.originalDx;\n\n    player.dx = -player.dx;\n  }\n\n  if (player.x + player.dx < 0) {\n    player.x = 0; // player.dx = player.originalDx\n\n    player.dx = -player.dx;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/frame.js":
/*!******************************!*\
  !*** ./src/scripts/frame.js ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Object = __webpack_require__(/*! ./object.js */ \"./src/scripts/object.js\"); // const Background = require('./background.js')\n\n\nclass Frame {\n  constructor(number, lastPlat = \"\") {\n    this.plats = [];\n    this.number = number;\n    this.lastPlat = lastPlat;\n    this.addPlatform();\n    this.draw();\n  }\n\n  addPlatform() {\n    if (this.number === 0) {\n      this.plats.push(new Object(0, canvas.height - 100, canvas.width, 100, \"white\"));\n      this.plats.push(new Object(canvas.width / 2, canvas.height - 150, 10, 10, \"white\"));\n      this.lastPlat = this.plats[this.plats.length - 1];\n    }\n\n    for (let i = 0; i < window.canvas.height / 200; i++) {\n      let rand = Math.random() < 0.5 ? -1 : 1; // random left or right;\n\n      let distance = (Math.random() * 100 + 200) * rand;\n      let x = this.lastPlat.x + distance;\n\n      if (x < 0) {\n        x = 50;\n      } else if (x > canvas.width - 100) {\n        x = canvas.width - 200;\n      }\n\n      let y = this.lastPlat.y - 200;\n\n      if (y < 0 && this.number != 0) {\n        y = canvas.height - 100;\n      }\n\n      let randWidth = Math.random() * 10 + 10;\n      let newObj = new Object(x, y, randWidth, 10, \"white\");\n      this.plats.push(newObj);\n      this.lastPlat = newObj;\n    }\n  }\n\n  draw() {\n    this.plats.forEach(plat => plat.draw());\n  }\n\n}\n\nmodule.exports = Frame;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q1hrQixNQUFNLENBQUNDLE9BQVAsR0FBaUJ6QixLQUFqQiIsInNvdXJjZXMiOlsid2VicGFjazovL215X3B1Z190b29fZmF0Ly4vc3JjL3NjcmlwdHMvZnJhbWUuanM/ZDE0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBPYmplY3QgPSByZXF1aXJlKCcuL29iamVjdC5qcycpXG4vLyBjb25zdCBCYWNrZ3JvdW5kID0gcmVxdWlyZSgnLi9iYWNrZ3JvdW5kLmpzJylcblxuY2xhc3MgRnJhbWV7XG4gICAgY29uc3RydWN0b3IobnVtYmVyLCBsYXN0UGxhdCA9IFwiXCIpe1xuICAgICAgICB0aGlzLnBsYXRzID0gW107XG4gICAgICAgIHRoaXMubnVtYmVyID0gbnVtYmVyO1xuICAgICAgICB0aGlzLmxhc3RQbGF0ID0gbGFzdFBsYXQ7XG4gICAgICAgIHRoaXMuYWRkUGxhdGZvcm0oKTtcbiAgICAgICAgdGhpcy5kcmF3KCk7XG5cbiAgICB9XG4gICAgYWRkUGxhdGZvcm0oKXtcbiAgICAgICAgaWYgKHRoaXMubnVtYmVyID09PSAwKXtcbiAgICAgICAgICAgIHRoaXMucGxhdHMucHVzaCggbmV3IE9iamVjdCgwLCBjYW52YXMuaGVpZ2h0IC0gMTAwLCBjYW52YXMud2lkdGgsIDEwMCwgXCJ3aGl0ZVwiKSlcbiAgICAgICAgICAgIHRoaXMucGxhdHMucHVzaCggbmV3IE9iamVjdCggY2FudmFzLndpZHRoIC8gMiwgY2FudmFzLmhlaWdodCAtIDE1MCwgMTAsIDEwLCBcIndoaXRlXCIpIClcbiAgICAgICAgICAgIHRoaXMubGFzdFBsYXQgPSB0aGlzLnBsYXRzW3RoaXMucGxhdHMubGVuZ3RoIC0gMV07XG4gICAgICAgIH1cbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHdpbmRvdy5jYW52YXMuaGVpZ2h0LyAyMDA7IGkrKyl7XG4gICAgICAgICAgICBsZXQgcmFuZCA9IE1hdGgucmFuZG9tKCkgPCAwLjUgPyAtMSA6IDE7IC8vIHJhbmRvbSBsZWZ0IG9yIHJpZ2h0O1xuICAgICAgICAgICAgbGV0IGRpc3RhbmNlID0gKE1hdGgucmFuZG9tKCkgKiAxMDAgKyAyMDApICogcmFuZFxuICAgICAgICAgICAgbGV0IHggPSAodGhpcy5sYXN0UGxhdC54ICsgZGlzdGFuY2UpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoeCA8IDApIHtcbiAgICAgICAgICAgICAgICB4ID0gNTA7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHggPiBjYW52YXMud2lkdGggLSAxMDApe1xuICAgICAgICAgICAgICAgIHggPSBjYW52YXMud2lkdGggLSAyMDA7XG4gICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgXG4gICAgICAgICAgICBsZXQgeSA9IHRoaXMubGFzdFBsYXQueSAtIDIwMDtcbiAgICAgICAgICAgIGlmICh5IDwgMCAmJiB0aGlzLm51bWJlciAhPSAwKXtcbiAgICAgICAgICAgICAgICB5ID0gY2FudmFzLmhlaWdodCAtIDEwMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGV0IHJhbmRXaWR0aCA9IE1hdGgucmFuZG9tKCkqMTAgKyAxMDtcblxuICAgICAgICAgICAgbGV0IG5ld09iaiA9IG5ldyBPYmplY3QoeCwgeSwgcmFuZFdpZHRoLCAxMCwgXCJ3aGl0ZVwiKVxuICAgICAgICAgICAgdGhpcy5wbGF0cy5wdXNoKG5ld09iaik7XG4gICAgICAgICAgICB0aGlzLmxhc3RQbGF0ID0gbmV3T2JqO1xuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICBkcmF3KCl7XG4gICAgICAgIHRoaXMucGxhdHMuZm9yRWFjaChwbGF0ID0+IHBsYXQuZHJhdygpKTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gRnJhbWU7Il0sIm5hbWVzIjpbIk9iamVjdCIsInJlcXVpcmUiLCJGcmFtZSIsImNvbnN0cnVjdG9yIiwibnVtYmVyIiwibGFzdFBsYXQiLCJwbGF0cyIsImFkZFBsYXRmb3JtIiwiZHJhdyIsInB1c2giLCJjYW52YXMiLCJoZWlnaHQiLCJ3aWR0aCIsImxlbmd0aCIsImkiLCJ3aW5kb3ciLCJyYW5kIiwiTWF0aCIsInJhbmRvbSIsImRpc3RhbmNlIiwieCIsInkiLCJyYW5kV2lkdGgiLCJuZXdPYmoiLCJmb3JFYWNoIiwicGxhdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/frame.js\n");

/***/ }),

/***/ "./src/scripts/object.js":
/*!*******************************!*\
  !*** ./src/scripts/object.js ***!
  \*******************************/
/***/ (function(module) {

eval("class Object {\n  constructor(x, y, width, height, color, visible = true) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.color = color;\n    this.visible = visible;\n    this.leftCorner = [this.x, this.y];\n    this.rightCorner = [this.x + this.width, this.y];\n    this.draw();\n  }\n\n  draw() {\n    context.fillStyle = this.color;\n    context.lineWidth = 5;\n    context.strokeStyle = \"black\"; // context.shadowColor = 'blue';\n    // context.shadowBlur = 20;\n\n    context.fillRect(this.x, this.y, this.width, this.height);\n    context.strokeRect(this.x, this.y, this.width, this.height);\n  }\n\n  validPosArray(x, y, dx, dy, maxHeight) {\n    const pos = [];\n    x += dx;\n    y += dy;\n\n    for (let i = 1; y > 0; i++) {\n      x += dx;\n\n      if (y >= maxHeight) {\n        dy = -dy;\n      }\n\n      y += dy;\n\n      if (y > maxHeight || y < 0) {\n        continue;\n      }\n\n      if (x < 0 || x > 600) {\n        // ensuring platform is in the map x axis;\n        continue;\n      }\n\n      if (y < 5) {\n        // ensuring platform is at least 5 higher than the previous\n        continue;\n      }\n\n      pos.push([x, y]);\n    }\n\n    let mid = Math.floor(pos.length / 2);\n    return pos.slice(mid);\n  }\n\n}\n\nmodule.exports = Object;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teV9wdWdfdG9vX2ZhdC8uL3NyYy9zY3JpcHRzL29iamVjdC5qcz9mOWZkIl0sIm5hbWVzIjpbIk9iamVjdCIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJ3aWR0aCIsImhlaWdodCIsImNvbG9yIiwidmlzaWJsZSIsImxlZnRDb3JuZXIiLCJyaWdodENvcm5lciIsImRyYXciLCJjb250ZXh0IiwiZmlsbFN0eWxlIiwibGluZVdpZHRoIiwic3Ryb2tlU3R5bGUiLCJmaWxsUmVjdCIsInN0cm9rZVJlY3QiLCJ2YWxpZFBvc0FycmF5IiwiZHgiLCJkeSIsIm1heEhlaWdodCIsInBvcyIsImkiLCJwdXNoIiwibWlkIiwiTWF0aCIsImZsb29yIiwibGVuZ3RoIiwic2xpY2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFOLENBQWE7QUFDVEMsRUFBQUEsV0FBVyxDQUFDQyxDQUFELEVBQUlDLENBQUosRUFBT0MsS0FBUCxFQUFjQyxNQUFkLEVBQXNCQyxLQUF0QixFQUE2QkMsT0FBTyxHQUFHLElBQXZDLEVBQTRDO0FBQ25ELFNBQUtMLENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLENBQUwsR0FBVUEsQ0FBVjtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtDLE1BQUwsR0FBY0EsTUFBZDtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtDLE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtDLFVBQUwsR0FBa0IsQ0FBQyxLQUFLTixDQUFOLEVBQVMsS0FBS0MsQ0FBZCxDQUFsQjtBQUNBLFNBQUtNLFdBQUwsR0FBbUIsQ0FBQyxLQUFLUCxDQUFMLEdBQVMsS0FBS0UsS0FBZixFQUFzQixLQUFLRCxDQUEzQixDQUFuQjtBQUNBLFNBQUtPLElBQUw7QUFDSDs7QUFFREEsRUFBQUEsSUFBSSxHQUFHO0FBQ0hDLElBQUFBLE9BQU8sQ0FBQ0MsU0FBUixHQUFvQixLQUFLTixLQUF6QjtBQUNBSyxJQUFBQSxPQUFPLENBQUNFLFNBQVIsR0FBb0IsQ0FBcEI7QUFDQUYsSUFBQUEsT0FBTyxDQUFDRyxXQUFSLEdBQXNCLE9BQXRCLENBSEcsQ0FJSDtBQUNBOztBQUNBSCxJQUFBQSxPQUFPLENBQUNJLFFBQVIsQ0FBaUIsS0FBS2IsQ0FBdEIsRUFBeUIsS0FBS0MsQ0FBOUIsRUFBaUMsS0FBS0MsS0FBdEMsRUFBNkMsS0FBS0MsTUFBbEQ7QUFDQU0sSUFBQUEsT0FBTyxDQUFDSyxVQUFSLENBQW1CLEtBQUtkLENBQXhCLEVBQTJCLEtBQUtDLENBQWhDLEVBQW1DLEtBQUtDLEtBQXhDLEVBQStDLEtBQUtDLE1BQXBEO0FBQ0g7O0FBRURZLEVBQUFBLGFBQWEsQ0FBQ2YsQ0FBRCxFQUFJQyxDQUFKLEVBQU9lLEVBQVAsRUFBV0MsRUFBWCxFQUFlQyxTQUFmLEVBQXlCO0FBQ2xDLFVBQU1DLEdBQUcsR0FBRyxFQUFaO0FBQ0FuQixJQUFBQSxDQUFDLElBQUlnQixFQUFMO0FBQ0FmLElBQUFBLENBQUMsSUFBSWdCLEVBQUw7O0FBQ0EsU0FBSSxJQUFJRyxDQUFDLEdBQUcsQ0FBWixFQUFlbkIsQ0FBQyxHQUFHLENBQW5CLEVBQXNCbUIsQ0FBQyxFQUF2QixFQUEwQjtBQUN0QnBCLE1BQUFBLENBQUMsSUFBSWdCLEVBQUw7O0FBQ0EsVUFBSWYsQ0FBQyxJQUFJaUIsU0FBVCxFQUFtQjtBQUNmRCxRQUFBQSxFQUFFLEdBQUcsQ0FBQ0EsRUFBTjtBQUNIOztBQUNEaEIsTUFBQUEsQ0FBQyxJQUFJZ0IsRUFBTDs7QUFDQSxVQUFHaEIsQ0FBQyxHQUFHaUIsU0FBSixJQUFpQmpCLENBQUMsR0FBRyxDQUF4QixFQUEwQjtBQUN0QjtBQUNIOztBQUVELFVBQUdELENBQUMsR0FBRyxDQUFKLElBQVNBLENBQUMsR0FBRyxHQUFoQixFQUFvQjtBQUFFO0FBQ2xCO0FBQ0g7O0FBRUQsVUFBR0MsQ0FBQyxHQUFHLENBQVAsRUFBUztBQUFFO0FBQ1A7QUFDSDs7QUFFRGtCLE1BQUFBLEdBQUcsQ0FBQ0UsSUFBSixDQUFTLENBQUNyQixDQUFELEVBQUlDLENBQUosQ0FBVDtBQUNIOztBQUNELFFBQUlxQixHQUFHLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXTCxHQUFHLENBQUNNLE1BQUosR0FBYSxDQUF4QixDQUFWO0FBQ0EsV0FBT04sR0FBRyxDQUFDTyxLQUFKLENBQVVKLEdBQVYsQ0FBUDtBQUNIOztBQWpEUTs7QUFzRGJLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjlCLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgT2JqZWN0IHtcclxuICAgIGNvbnN0cnVjdG9yKHgsIHksIHdpZHRoLCBoZWlnaHQsIGNvbG9yLCB2aXNpYmxlID0gdHJ1ZSl7XHJcbiAgICAgICAgdGhpcy54ID0geDtcclxuICAgICAgICB0aGlzLnkgPSAgeTtcclxuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IGNvbG9yO1xyXG4gICAgICAgIHRoaXMudmlzaWJsZSA9IHZpc2libGU7XHJcbiAgICAgICAgdGhpcy5sZWZ0Q29ybmVyID0gW3RoaXMueCwgdGhpcy55XVxyXG4gICAgICAgIHRoaXMucmlnaHRDb3JuZXIgPSBbdGhpcy54ICsgdGhpcy53aWR0aCwgdGhpcy55XVxyXG4gICAgICAgIHRoaXMuZHJhdygpO1xyXG4gICAgfVxyXG5cclxuICAgIGRyYXcgKCl7XHJcbiAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSB0aGlzLmNvbG9yO1xyXG4gICAgICAgIGNvbnRleHQubGluZVdpZHRoID0gNTtcclxuICAgICAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gXCJibGFja1wiXHJcbiAgICAgICAgLy8gY29udGV4dC5zaGFkb3dDb2xvciA9ICdibHVlJztcclxuICAgICAgICAvLyBjb250ZXh0LnNoYWRvd0JsdXIgPSAyMDtcclxuICAgICAgICBjb250ZXh0LmZpbGxSZWN0KHRoaXMueCwgdGhpcy55LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7ICAgXHJcbiAgICAgICAgY29udGV4dC5zdHJva2VSZWN0KHRoaXMueCwgdGhpcy55LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFsaWRQb3NBcnJheSh4LCB5LCBkeCwgZHksIG1heEhlaWdodCl7XHJcbiAgICAgICAgY29uc3QgcG9zID0gW107XHJcbiAgICAgICAgeCArPSBkeFxyXG4gICAgICAgIHkgKz0gZHlcclxuICAgICAgICBmb3IobGV0IGkgPSAxOyB5ID4gMDsgaSsrKXtcclxuICAgICAgICAgICAgeCArPSBkeFxyXG4gICAgICAgICAgICBpZiAoeSA+PSBtYXhIZWlnaHQpe1xyXG4gICAgICAgICAgICAgICAgZHkgPSAtZHk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgeSArPSBkeVxyXG4gICAgICAgICAgICBpZih5ID4gbWF4SGVpZ2h0IHx8IHkgPCAwKXtcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmKHggPCAwIHx8IHggPiA2MDApeyAvLyBlbnN1cmluZyBwbGF0Zm9ybSBpcyBpbiB0aGUgbWFwIHggYXhpcztcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmKHkgPCA1KXsgLy8gZW5zdXJpbmcgcGxhdGZvcm0gaXMgYXQgbGVhc3QgNSBoaWdoZXIgdGhhbiB0aGUgcHJldmlvdXNcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBwb3MucHVzaChbeCwgeV0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBtaWQgPSBNYXRoLmZsb29yKHBvcy5sZW5ndGggLyAyKVxyXG4gICAgICAgIHJldHVybiBwb3Muc2xpY2UobWlkKVxyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0OyJdLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9vYmplY3QuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/object.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(module) {

eval("let right;\nlet left;\n\nclass Player {\n  constructor(x, y, src) {\n    this.x = x;\n    this.y = y;\n    this.rev = 1;\n    this.dx = 3 * this.rev;\n    this.dy = 6;\n    this.originalDx = 3;\n    this.maxDx = 10;\n    this.currentY = y;\n    this.originalDy = 6;\n    this.maxHeight = this.y - 200;\n    this.friction = 0.1;\n    this.maxVel = 5;\n    this.wind = 5;\n\n    this.regKeysDown = event => {\n      this.keyDown(event);\n    };\n\n    this.regKeysUp = event => {\n      this.keyUp(event);\n    };\n\n    this.revKeysDown = event => {\n      this.revKeyDown(event);\n    };\n\n    this.revKeysUp = event => {\n      this.revKeyUp(event);\n    }; // image stuff\n\n\n    this.src = src;\n    this.cols = 10;\n    this.row = 1;\n    this.totalFrames = 10;\n    this.currentFrame = 0;\n    this.slowFrame = 2;\n    this.srcX = 0;\n    this.srcY = 0;\n    this.spriteWidth = this.src.width / this.cols;\n    this.spriteHeight = this.src.height / this.row;\n    this.width = this.spriteWidth;\n    this.height = this.spriteHeight;\n    this.timer = 5; // this.bindInputs();\n    // this.draw();\n  }\n\n  draw() {\n    context.fillStyle = 'rgba(225,225,225,0)'; // clear box\n\n    context.fillRect(this.x, this.y, this.width, this.height);\n    window.context.drawImage(this.src, this.srcX, this.srcY * this.spriteHeight, this.spriteWidth, this.spriteHeight, this.x, this.y, this.spriteWidth, this.spriteHeight);\n    this.animate();\n  }\n\n  increaseFrame() {\n    if (this.timer > 0) {\n      this.timer -= 1;\n    } else {\n      this.currentFrame++;\n      this.timer = 5;\n    }\n  }\n\n  pugStep() {\n    this.increaseFrame();\n    this.currentFrame = this.currentFrame % this.totalFrames;\n    this.srcX = this.currentFrame * this.spriteWidth;\n  }\n\n  windEffect(direction) {\n    if (direction === 'left') {\n      this.x -= this.wind;\n    } else if (direction === 'right') {\n      this.x += this.wind;\n    }\n  }\n\n  animate() {\n    this.pugStep();\n\n    if (left) {\n      if (this.src.src != \"src/scripts/small_rev.png\") {\n        this.src.src = \"src/scripts/small_rev.png\";\n      }\n\n      if (this.rev === -1) {\n        this.src.src = \"src/scripts/small.png\";\n      }\n\n      if (this.dx === 0 && this.x <= 0) this.dx = this.originalDx;\n      if (this.dx === 0 && this.x >= canvas.width) this.dx = -this.originalDx;\n\n      if (this.dx < this.maxDx) {\n        this.dx += this.friction;\n      }\n\n      this.x -= this.dx * this.rev;\n    } else if (right) {\n      if (this.src.src != \"src/scripts/small.png\") {\n        this.src.src = \"src/scripts/small.png\";\n      }\n\n      if (this.rev === -1) {\n        this.src.src = \"src/scripts/small_rev.png\";\n      }\n\n      if (this.dx === 0 && this.x <= 0) this.dx = this.originalDx;\n      if (this.dx === 0 && this.x >= canvas.width) this.dx = -this.originalDx;\n\n      if (this.dx < this.maxDx) {\n        this.dx += this.friction;\n      }\n\n      this.x += this.dx * this.rev;\n    } else if (!left || !right) {\n      this.dx = this.originalDx;\n    } else if (!right) {\n      this.dx = this.originalDx;\n    }\n\n    this.dy += this.friction;\n    this.y += this.dy;\n  } // removeInputs(){\n  //     let that = this;\n  //     document.removeEventListener(\"keyup\", that.regKeysUp);\n  //     document.removeEventListener(\"keyup\", that.revKeysUp);\n  //     document.removeEventListener(\"keydown\", that.revKeysDown);\n  //     document.removeEventListener(\"keydown\", that.regKeysDown);\n  // }\n\n\n  bindInputs() {\n    let that = this;\n    document.addEventListener(\"keyup\", that.regKeysUp);\n    document.addEventListener(\"keydown\", that.regKeysDown);\n  }\n\n  keyDown(event) {\n    if (event.key === \"ArrowRight\" || event.key === \"d\") {\n      right = true;\n    } else if (event.key === \"ArrowLeft\" || event.key === \"a\") {\n      left = true;\n    }\n  }\n\n  keyUp(event) {\n    if (event.key === \"ArrowRight\" || event.key === \"d\") {\n      right = false;\n    } else if (event.key === \"ArrowLeft\" || event.key === \"a\") {\n      left = false;\n    }\n  } // reverseInputs(){\n  //     let that = this;\n  //     document.removeEventListener(\"keydown\", that.regKeysDown);\n  //     document.removeEventListener(\"keyup\", that.regKeysUp);\n  //     document.addEventListener(\"keydown\", that.revKeysDown)\n  //     document.addEventListener(\"keyup\",  that.revKeysUp)\n  // }\n  // revKeyDown(event){\n  //     if(event.key === \"ArrowRight\" || event.key === \"d\"){\n  //         left = true;\n  //     }\n  //     if(event.key === \"ArrowLeft\" || event.key === \"a\"){\n  //         right = true;\n  //     }\n  // }\n  // revKeyUp(event){\n  //     if(event.key === \"ArrowRight\" || event.key === \"d\"){\n  //         left = false;\n  //     } \n  //     if(event.key === \"ArrowLeft\" || event.key === \"a\"){\n  //         right = false;\n  //     }\n  // }\n\n\n}\n\nmodule.exports = Player;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/wind.js":
/*!*****************************!*\
  !*** ./src/scripts/wind.js ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const WindCircles = __webpack_require__(/*! ./windCircles.js */ \"./src/scripts/windCircles.js\");\n\nclass Wind {\n  constructor() {\n    this.time = 3000;\n    this.circles = [];\n    this.timer = 500;\n    this.state = 'right';\n    this.makeCircles();\n    this.draw();\n  }\n\n  draw() {\n    this.circles.forEach(circle => circle.draw());\n\n    if (this.timer < 0) {\n      this.changeState();\n      this.timer = 500;\n    } else {\n      this.timer--;\n    }\n\n    this.collision();\n  }\n\n  makeCircles() {\n    for (let i = 0; i < 10; i++) {\n      let randomX = Math.random() * window.canvas.width;\n      let randomY = Math.random() * window.canvas.height;\n      let randomDx = Math.random() * 10 + 10;\n      let randomRadius = Math.random() * 5 + 2;\n      let newCircle = new WindCircles(randomX, randomY, randomDx, randomRadius);\n      this.circles.push(newCircle);\n    }\n  }\n\n  changeState() {\n    if (this.state === \"right\") {\n      this.state = \"left\";\n    } else if (this.state === \"left\") {\n      this.state = \"right\";\n    }\n\n    this.circles.forEach(circle => circle.dx = -circle.dx);\n  }\n\n  collision() {\n    this.circles.forEach(circle => {\n      if (circle.x > canvas.width + circle.radius) {\n        circle.x = -circle.radius;\n      } else if (circle.x < -circle.radius) {\n        circle.x = canvas.width + circle.radius;\n      }\n    });\n  }\n\n}\n\nmodule.exports = Wind;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy93aW5kLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFdBQVcsR0FBR0MsbUJBQU8sQ0FBQyxzREFBRCxDQUEzQjs7QUFFQSxNQUFNQyxJQUFOLENBQVU7QUFDTkMsRUFBQUEsV0FBVyxHQUFFO0FBQ1QsU0FBS0MsSUFBTCxHQUFZLElBQVo7QUFDQSxTQUFLQyxPQUFMLEdBQWUsRUFBZjtBQUNBLFNBQUtDLEtBQUwsR0FBYSxHQUFiO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLE9BQWI7QUFDQSxTQUFLQyxXQUFMO0FBQ0EsU0FBS0MsSUFBTDtBQUNIOztBQUVEQSxFQUFBQSxJQUFJLEdBQUU7QUFDRixTQUFLSixPQUFMLENBQWFLLE9BQWIsQ0FBcUJDLE1BQU0sSUFBSUEsTUFBTSxDQUFDRixJQUFQLEVBQS9COztBQUNBLFFBQUksS0FBS0gsS0FBTCxHQUFhLENBQWpCLEVBQW1CO0FBQ2YsV0FBS00sV0FBTDtBQUNBLFdBQUtOLEtBQUwsR0FBYSxHQUFiO0FBQ0gsS0FIRCxNQUdPO0FBQ0gsV0FBS0EsS0FBTDtBQUNIOztBQUNELFNBQUtPLFNBQUw7QUFDSDs7QUFFREwsRUFBQUEsV0FBVyxHQUFFO0FBQ1QsU0FBSSxJQUFJTSxDQUFDLEdBQUcsQ0FBWixFQUFlQSxDQUFDLEdBQUcsRUFBbkIsRUFBdUJBLENBQUMsRUFBeEIsRUFBMkI7QUFDdkIsVUFBSUMsT0FBTyxHQUFHQyxJQUFJLENBQUNDLE1BQUwsS0FBY0MsTUFBTSxDQUFDQyxNQUFQLENBQWNDLEtBQTFDO0FBQ0EsVUFBSUMsT0FBTyxHQUFHTCxJQUFJLENBQUNDLE1BQUwsS0FBY0MsTUFBTSxDQUFDQyxNQUFQLENBQWNHLE1BQTFDO0FBQ0EsVUFBSUMsUUFBUSxHQUFHUCxJQUFJLENBQUNDLE1BQUwsS0FBZSxFQUFmLEdBQW9CLEVBQW5DO0FBQ0EsVUFBSU8sWUFBWSxHQUFHUixJQUFJLENBQUNDLE1BQUwsS0FBYyxDQUFkLEdBQWtCLENBQXJDO0FBQ0EsVUFBSVEsU0FBUyxHQUFHLElBQUl6QixXQUFKLENBQWdCZSxPQUFoQixFQUF5Qk0sT0FBekIsRUFBa0NFLFFBQWxDLEVBQTRDQyxZQUE1QyxDQUFoQjtBQUNBLFdBQUtuQixPQUFMLENBQWFxQixJQUFiLENBQWtCRCxTQUFsQjtBQUNIO0FBQ0o7O0FBRURiLEVBQUFBLFdBQVcsR0FBRTtBQUNULFFBQUcsS0FBS0wsS0FBTCxLQUFlLE9BQWxCLEVBQTBCO0FBQ3RCLFdBQUtBLEtBQUwsR0FBYSxNQUFiO0FBQ0gsS0FGRCxNQUVPLElBQUksS0FBS0EsS0FBTCxLQUFlLE1BQW5CLEVBQTBCO0FBQzdCLFdBQUtBLEtBQUwsR0FBYSxPQUFiO0FBQ0g7O0FBRUQsU0FBS0YsT0FBTCxDQUFhSyxPQUFiLENBQXFCQyxNQUFNLElBQUlBLE1BQU0sQ0FBQ2dCLEVBQVAsR0FBWSxDQUFDaEIsTUFBTSxDQUFDZ0IsRUFBbkQ7QUFFSDs7QUFFRGQsRUFBQUEsU0FBUyxHQUFFO0FBQ1AsU0FBS1IsT0FBTCxDQUFhSyxPQUFiLENBQXFCQyxNQUFNLElBQUk7QUFDM0IsVUFBSUEsTUFBTSxDQUFDaUIsQ0FBUCxHQUFXVCxNQUFNLENBQUNDLEtBQVAsR0FBZVQsTUFBTSxDQUFDa0IsTUFBckMsRUFBNEM7QUFDeENsQixRQUFBQSxNQUFNLENBQUNpQixDQUFQLEdBQVcsQ0FBQ2pCLE1BQU0sQ0FBQ2tCLE1BQW5CO0FBQ0gsT0FGRCxNQUVPLElBQUlsQixNQUFNLENBQUNpQixDQUFQLEdBQVcsQ0FBQ2pCLE1BQU0sQ0FBQ2tCLE1BQXZCLEVBQThCO0FBQ2pDbEIsUUFBQUEsTUFBTSxDQUFDaUIsQ0FBUCxHQUFXVCxNQUFNLENBQUNDLEtBQVAsR0FBZVQsTUFBTSxDQUFDa0IsTUFBakM7QUFDSDtBQUNKLEtBTkQ7QUFPSDs7QUFuREs7O0FBc0RWQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI3QixJQUFqQiIsInNvdXJjZXMiOlsid2VicGFjazovL215X3B1Z190b29fZmF0Ly4vc3JjL3NjcmlwdHMvd2luZC5qcz8xYjcyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFdpbmRDaXJjbGVzID0gcmVxdWlyZSgnLi93aW5kQ2lyY2xlcy5qcycpXG5cbmNsYXNzIFdpbmR7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgdGhpcy50aW1lID0gMzAwMDtcbiAgICAgICAgdGhpcy5jaXJjbGVzID0gW107XG4gICAgICAgIHRoaXMudGltZXIgPSA1MDA7XG4gICAgICAgIHRoaXMuc3RhdGUgPSAncmlnaHQnO1xuICAgICAgICB0aGlzLm1ha2VDaXJjbGVzKCk7XG4gICAgICAgIHRoaXMuZHJhdygpO1xuICAgIH1cblxuICAgIGRyYXcoKXtcbiAgICAgICAgdGhpcy5jaXJjbGVzLmZvckVhY2goY2lyY2xlID0+IGNpcmNsZS5kcmF3KCkpO1xuICAgICAgICBpZiAodGhpcy50aW1lciA8IDApe1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VTdGF0ZSgpO1xuICAgICAgICAgICAgdGhpcy50aW1lciA9IDUwMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudGltZXItLTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbGxpc2lvbigpO1xuICAgIH1cblxuICAgIG1ha2VDaXJjbGVzKCl7XG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCAxMDsgaSsrKXtcbiAgICAgICAgICAgIGxldCByYW5kb21YID0gTWF0aC5yYW5kb20oKSp3aW5kb3cuY2FudmFzLndpZHRoO1xuICAgICAgICAgICAgbGV0IHJhbmRvbVkgPSBNYXRoLnJhbmRvbSgpKndpbmRvdy5jYW52YXMuaGVpZ2h0O1xuICAgICAgICAgICAgbGV0IHJhbmRvbUR4ID0gTWF0aC5yYW5kb20oKSogMTAgKyAxMDtcbiAgICAgICAgICAgIGxldCByYW5kb21SYWRpdXMgPSBNYXRoLnJhbmRvbSgpKjUgKyAyO1xuICAgICAgICAgICAgbGV0IG5ld0NpcmNsZSA9IG5ldyBXaW5kQ2lyY2xlcyhyYW5kb21YLCByYW5kb21ZLCByYW5kb21EeCwgcmFuZG9tUmFkaXVzKVxuICAgICAgICAgICAgdGhpcy5jaXJjbGVzLnB1c2gobmV3Q2lyY2xlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNoYW5nZVN0YXRlKCl7XG4gICAgICAgIGlmKHRoaXMuc3RhdGUgPT09IFwicmlnaHRcIil7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gXCJsZWZ0XCJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnN0YXRlID09PSBcImxlZnRcIil7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gXCJyaWdodFwiXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNpcmNsZXMuZm9yRWFjaChjaXJjbGUgPT4gY2lyY2xlLmR4ID0gLWNpcmNsZS5keClcbiAgICBcbiAgICB9XG5cbiAgICBjb2xsaXNpb24oKXtcbiAgICAgICAgdGhpcy5jaXJjbGVzLmZvckVhY2goY2lyY2xlID0+IHtcbiAgICAgICAgICAgIGlmIChjaXJjbGUueCA+IGNhbnZhcy53aWR0aCArIGNpcmNsZS5yYWRpdXMpe1xuICAgICAgICAgICAgICAgIGNpcmNsZS54ID0gLWNpcmNsZS5yYWRpdXM7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNpcmNsZS54IDwgLWNpcmNsZS5yYWRpdXMpe1xuICAgICAgICAgICAgICAgIGNpcmNsZS54ID0gY2FudmFzLndpZHRoICsgY2lyY2xlLnJhZGl1c1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBXaW5kOyJdLCJuYW1lcyI6WyJXaW5kQ2lyY2xlcyIsInJlcXVpcmUiLCJXaW5kIiwiY29uc3RydWN0b3IiLCJ0aW1lIiwiY2lyY2xlcyIsInRpbWVyIiwic3RhdGUiLCJtYWtlQ2lyY2xlcyIsImRyYXciLCJmb3JFYWNoIiwiY2lyY2xlIiwiY2hhbmdlU3RhdGUiLCJjb2xsaXNpb24iLCJpIiwicmFuZG9tWCIsIk1hdGgiLCJyYW5kb20iLCJ3aW5kb3ciLCJjYW52YXMiLCJ3aWR0aCIsInJhbmRvbVkiLCJoZWlnaHQiLCJyYW5kb21EeCIsInJhbmRvbVJhZGl1cyIsIm5ld0NpcmNsZSIsInB1c2giLCJkeCIsIngiLCJyYWRpdXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/wind.js\n");

/***/ }),

/***/ "./src/scripts/windCircles.js":
/*!************************************!*\
  !*** ./src/scripts/windCircles.js ***!
  \************************************/
/***/ (function(module) {

eval("class WindCircles {\n  constructor(x, y, dx, radius) {\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.radius = radius;\n    this.friction = 0.2;\n  }\n\n  draw() {\n    this.circleStep();\n    window.context.beginPath();\n    window.context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    window.context.fillStyle = 'rgba(255, 255, 255, .30)';\n    window.context.fill();\n    window.context.strokeStyle = 'rgba(255, 255, 255, .10)';\n    window.context.stroke();\n  }\n\n  circleStep() {\n    this.x += this.dx * this.friction;\n  }\n\n}\n\nmodule.exports = WindCircles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teV9wdWdfdG9vX2ZhdC8uL3NyYy9zY3JpcHRzL3dpbmRDaXJjbGVzLmpzPzg1YTUiXSwibmFtZXMiOlsiV2luZENpcmNsZXMiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwiZHgiLCJyYWRpdXMiLCJmcmljdGlvbiIsImRyYXciLCJjaXJjbGVTdGVwIiwid2luZG93IiwiY29udGV4dCIsImJlZ2luUGF0aCIsImFyYyIsIk1hdGgiLCJQSSIsImZpbGxTdHlsZSIsImZpbGwiLCJzdHJva2VTdHlsZSIsInN0cm9rZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFdBQU4sQ0FBaUI7QUFDYkMsRUFBQUEsV0FBVyxDQUFDQyxDQUFELEVBQUlDLENBQUosRUFBT0MsRUFBUCxFQUFXQyxNQUFYLEVBQWtCO0FBQ3pCLFNBQUtILENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLEVBQUwsR0FBVUEsRUFBVjtBQUNBLFNBQUtDLE1BQUwsR0FBY0EsTUFBZDtBQUNBLFNBQUtDLFFBQUwsR0FBZ0IsR0FBaEI7QUFDSDs7QUFFREMsRUFBQUEsSUFBSSxHQUFFO0FBQ0YsU0FBS0MsVUFBTDtBQUNBQyxJQUFBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsU0FBZjtBQUNBRixJQUFBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZUUsR0FBZixDQUFtQixLQUFLVixDQUF4QixFQUEyQixLQUFLQyxDQUFoQyxFQUFtQyxLQUFLRSxNQUF4QyxFQUFnRCxDQUFoRCxFQUFtRFEsSUFBSSxDQUFDQyxFQUFMLEdBQVEsQ0FBM0QsRUFBOEQsS0FBOUQ7QUFDQUwsSUFBQUEsTUFBTSxDQUFDQyxPQUFQLENBQWVLLFNBQWYsR0FBMkIsMEJBQTNCO0FBQ0FOLElBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlTSxJQUFmO0FBQ0FQLElBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlTyxXQUFmLEdBQTZCLDBCQUE3QjtBQUNBUixJQUFBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZVEsTUFBZjtBQUNIOztBQUVEVixFQUFBQSxVQUFVLEdBQUU7QUFDUixTQUFLTixDQUFMLElBQVUsS0FBS0UsRUFBTCxHQUFVLEtBQUtFLFFBQXpCO0FBQ0g7O0FBckJZOztBQXVCakJhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLFdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgV2luZENpcmNsZXN7XG4gICAgY29uc3RydWN0b3IoeCwgeSwgZHgsIHJhZGl1cyl7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHRoaXMuZHggPSBkeDtcbiAgICAgICAgdGhpcy5yYWRpdXMgPSByYWRpdXNcbiAgICAgICAgdGhpcy5mcmljdGlvbiA9IDAuMjtcbiAgICB9XG5cbiAgICBkcmF3KCl7XG4gICAgICAgIHRoaXMuY2lyY2xlU3RlcCgpO1xuICAgICAgICB3aW5kb3cuY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgd2luZG93LmNvbnRleHQuYXJjKHRoaXMueCwgdGhpcy55LCB0aGlzLnJhZGl1cywgMCwgTWF0aC5QSSoyLCBmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5jb250ZXh0LmZpbGxTdHlsZSA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIC4zMCknXG4gICAgICAgIHdpbmRvdy5jb250ZXh0LmZpbGwoKTtcbiAgICAgICAgd2luZG93LmNvbnRleHQuc3Ryb2tlU3R5bGUgPSAncmdiYSgyNTUsIDI1NSwgMjU1LCAuMTApJ1xuICAgICAgICB3aW5kb3cuY29udGV4dC5zdHJva2UoKTtcbiAgICB9XG5cbiAgICBjaXJjbGVTdGVwKCl7XG4gICAgICAgIHRoaXMueCArPSB0aGlzLmR4ICogdGhpcy5mcmljdGlvbjtcbiAgICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IFdpbmRDaXJjbGVzOyJdLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy93aW5kQ2lyY2xlcy5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/windCircles.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teV9wdWdfdG9vX2ZhdC8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;