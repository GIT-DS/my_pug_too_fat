/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("//imports\nconst Player = __webpack_require__(/*! ./scripts/player.js */ \"./src/scripts/player.js\");\n\nconst Frames = __webpack_require__(/*! ./scripts/frame.js */ \"./src/scripts/frame.js\");\n\nconst Object = __webpack_require__(/*! ./scripts/object.js */ \"./src/scripts/object.js\");\n\nconst Wind = __webpack_require__(/*! ./scripts/wind.js */ \"./src/scripts/wind.js\");\n\nconst Credits = __webpack_require__(/*! ./scripts/credits.js */ \"./src/scripts/credits.js\"); //sprite\n\n\nlet pug = new Image();\npug.src = \"./src/scripts/small.png\";\nlet player;\nlet players = [];\n\npug.onload = () => {\n  if (players.length != 1) {\n    player = new Player(300, canvas.height - 500, pug);\n    players.push(player);\n  }\n};\n\nlet winnerBackground = new Image();\nwinnerBackground.src = \"./src/img/winnerBackground.jpg\"; //audio\n\nlet vol = new Image();\nvol.src = \"src/volOnSmall.png\"; // reverse controls indicator\n\nconst reverse = new Image();\nreverse.src = \"./src/reverse.png\";\nlet revWidth = reverse.width / 6;\nlet revHeight = reverse.height / 6; //variables\n\nlet wind;\nlet muted = false;\nlet falls = 0;\nlet start = true;\nlet game = false;\nlet end = false;\nconst quotes = [\"The greatest glory in living lies not in never falling, but in rising every time we fall. -Nelson Mandela\", \"We are what we repeatedly do. Excellence, then, is not an act, but a habit – Aristotle\", \"Life must be understood backward. But it must be lived forward – Søren Kierkegaard\", \"I think therefore I am – René Descartes\", \"The greater the difficulty, the more glory in surmounting it – Epicurus\", \"Perseverance is not a long race; it is many short races one after the other - Walter Elliot\", \"By perseverance the snail reached the ark - Charles Spurgeon\", \"With pride, there are many curses. With humility, there come many blessings - Erza Taft Benson\", \"It's not what you look at that matters, it's what you see - Henry David Thoreau\", \"LOL : ^ ) - Darrick Shin\", \"Omae wa mo shinderu - Kenshiro\", \"Whatever you lose, you'll find it again. But what you throw away you'll never get back - Kenshin Himura\", \"The world isn’t perfect. But it’s there for us, doing the best it can….that’s what makes it so damn beautiful - Roy Mustang\", \"People, who can’t throw something important away, can never hope to change anything - Armin Arlert\", \"Forgetting is like a wound. The wound may heal, but it has already left a scar - Monkey D. Luffy\"];\nlet quotesIdx = Math.floor(Math.random() * quotes.length); //background stuff\n\nconst backgrounds = ['src/img/1.jpg', 'src/img/2.jpg', 'src/img/3.jpg', 'src/img/4.jpg', 'src/img/5.jpg', 'src/img/6.jpg', 'src/img/7.jpg', 'src/img/8.jpg', 'src/img/9.jpg', 'src/img/11.jpg', 'src/img/12.jpg', 'src/img/14.jpg', 'src/img/15.jpg', 'src/img/16.jpg', 'src/img/17.jpg', 'src/img/18.jpg', 'src/img/19.jpg', 'src/img/20.jpg', 'src/img/last.jpg'];\nconst startBG = new Image();\nstartBG.src = \"./src/pugCookie.png\";\nlet background = new Image();\nbackground.src = backgrounds[0];\nlet backgroundIdx = 0; //frame tracker\n\nlet currentFrame = 0;\nlet frames = [];\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById('game');\n  const header = document.getElementById('header');\n  const body = document.getElementById('body');\n\n  if (window.innerWidth < 1451) {\n    document.body.style.transform = 'scale(' + window.screen.availHeight * 0.001 + ')';\n    document.body.style['-o-transform'] = 'scale(' + window.screen.availHeight * 0.001 + ')';\n    document.body.style['-webkit-transform'] = 'scale(' + window.screen.availHeight * 0.001 + ')';\n    document.body.style['-moz-transform'] = 'scale(' + window.screen.availHeight * 0.001 + ')';\n  }\n\n  canvas.width = 1600;\n  canvas.height = 900;\n  let c = canvas.getContext('2d');\n  window.context = c;\n  window.canvas = canvas;\n  firstFrame = new Frames(0);\n  frames.push(firstFrame);\n  wind = new Wind();\n  credits = new Credits();\n  let reverse = new Image();\n  reverse.src = \"src/reverse.png\";\n  window.titanic = new Audio('src/titanic.mp3');\n  window.titanic.volume = 0.1;\n  window.windSound = new Audio('src/wind.mp3');\n  window.windSound.volume = 0.1;\n  window.epicMusic = new Audio('src/alexander-nakarada-superepic.mp3');\n  window.epicMusic.volume = 0.05;\n  window.endMusic = new Audio('src/shooting_stars.mp3');\n  window.endMusic.volume = 0.05;\n  window.volumeButton = new Object(canvas.width - 95, 30, 70, 55, \"white\");\n\n  let musicEvent = event => musicEventHandler(event);\n\n  let startEvent = event => startEventHandler(event); // window.canvas.addEventListener(\"click\", startEvent, false)\n\n\n  window.addEventListener(\"keydown\", musicEvent, false);\n  window.addEventListener('keydown', startEvent, false); // window.titatic.addEventListener('ended', e => window.epicMusic.play());\n\n  window.setInterval(animate, 10);\n});\n\nfunction startEventHandler(event) {\n  if (event.key === 'Enter') {\n    if (start === true) {\n      start = false;\n      game = true;\n      end = false;\n    } else if (end === true) {\n      start = true;\n      game = false;\n      end = false;\n    }\n  }\n}\n\nfunction musicEventHandler(event) {\n  if (event.key === 'm') {\n    if (muted === true) {\n      vol.src = \"src/volOnSmall.png\";\n      window.epicMusic.muted = false;\n      window.windSound.muted = false;\n      window.titanic.muted = false;\n      window.endMusic.muted = false;\n      muted = false;\n    } else {\n      vol.src = \"src/volOffSmall.png\";\n      window.epicMusic.muted = true;\n      window.windSound.muted = true;\n      window.titanic.muted = true;\n      window.endMusic.muted = true;\n      muted = true;\n    }\n  }\n}\n\nfunction mouseCollision(event, object) {\n  let domRect = window.canvas.getBoundingClientRect();\n  let mouseX = event.clientX - domRect.x;\n  let mouseY = event.clientY - domRect.y;\n\n  if (mouseY < object.y + object.height && mouseX > object.x && mouseY > object.y && mouseX < object.x + object.width) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction objectCollision(player, object) {\n  if (inRangeY(player, object)) {\n    if (inRangeX(player, object)) {\n      player.dy = -player.originalDy;\n    }\n  }\n}\n\nfunction animate() {\n  if (start === true) {\n    window.context.drawImage(startBG, 0, 0, canvas.width, canvas.height);\n    window.context.fillStyle = 'rgba(225,225,225,0.1)';\n    window.context.fillRect(0, 0, canvas.width, 170);\n    window.context.fillStyle = \"black\";\n    window.context.fillText(\"Hello! Welcome to my fun little game. My pug is too fat. Help it exercise by reaching the top.\", canvas.width / 2, 50);\n    window.context.fillText(\"Watch out for some 'fun' little surprises along the way ;)\", canvas.width / 2, 90);\n    window.context.fillText(\"If you fall, you might fall all the way to the bottom, but that's part of the fun right?\", canvas.width / 2, 130);\n    window.startButton = new Object(canvas.width / 2 - 177, canvas.height - 200, 300, 100, \"White\");\n    window.startButton.draw();\n    window.context.font = \"30px Arial\";\n    window.context.fillStyle = \"black\";\n    window.context.textAlign = \"center\";\n    window.context.fillText(\"Press Enter to Start\", canvas.width / 2 - 30, canvas.height - 150 + 13);\n  } else if (game === true) {\n    // reset on replay\n    if (player.reseted === true) {\n      player.reseted = false;\n      player.reset();\n      currentFrame = 0;\n      frames = [];\n      firstFrame = new Frames(0);\n      frames.push(firstFrame);\n      backgroundIdx = 0;\n      falls = 0;\n      window.epicMusic.currentTime = 0;\n    }\n\n    window.endMusic.pause();\n    window.endMusic.currentTime = 0;\n    window.epicMusic.play();\n    window.context.clearRect(0, 0, canvas.width, canvas.height);\n    window.context.font = \"30px Arial\";\n    window.context.drawImage(background, 0, 0, canvas.width, canvas.height);\n\n    if (player.y < 0) {\n      backgroundIdx += 1;\n\n      if (backgroundIdx === backgrounds.length - 1) {\n        game = false;\n        end = true;\n        return;\n      }\n\n      background.src = backgrounds[backgroundIdx % backgrounds.length];\n      let lastFramePlats = getLastFrame(currentFrame).plats;\n      let lastPlat = lastFramePlats[lastFramePlats.length - 1];\n      currentFrame += 1;\n\n      if (!frames[currentFrame]) {\n        newFrame = new Frames(currentFrame, lastPlat);\n        frames.push(newFrame);\n      }\n\n      player.y += canvas.height;\n    } else if (player.y > canvas.height) {\n      backgroundIdx -= 1;\n      background.src = backgrounds[backgroundIdx % backgrounds.length];\n      currentFrame -= 1;\n      quotesIdx++;\n      player.y = 0;\n    }\n\n    frames[currentFrame].plats.forEach(plat => {\n      plat.draw();\n      objectCollision(player, plat);\n    }); // wind\n\n    if (currentFrame != 0 && currentFrame % 6 === 0 || currentFrame === 20) {\n      window.epicMusic.pause();\n      wind.draw();\n      window.windSound.play();\n      player.windEffect(wind.state);\n    } else {\n      window.windSound.pause();\n    } // conditional for reversing directions;\n\n\n    if (currentFrame != 0 && currentFrame % 4 === 0) {\n      window.context.globalAlpha = 0.5;\n      window.context.drawImage(reverse, 50, 80, revWidth, revHeight);\n      window.context.globalAlpha = 1;\n      player.rev = -1;\n    } else {\n      player.rev = 1;\n    } //quotes\n\n\n    if (currentFrame === 0) {\n      let quote = quotes[quotesIdx % quotes.length];\n      window.context.StrokeStyle = \"black\"; // window.context.lineWidth = 8;\n\n      window.context.textAlign = \"center\";\n      window.context.strokeText(quote, canvas.width / 2, canvas.height - 44);\n      window.context.fillStyle = \"white\";\n      window.context.textAlign = \"center\";\n      window.context.fillText(quote, canvas.width / 2, canvas.height - 44);\n    }\n\n    collideSide(player); //fall counter & troll music && remapping first screen background.\n\n    if (player.dy > 25) {\n      window.epicMusic.volume = 0; // window.epicMusic.pause();\n\n      window.titanic.currentTime = 2;\n      window.titanic.play();\n      falls++;\n      if (backgrounds[0] != \"src/img/yuno.jpg\") backgrounds[0] = \"src/img/yuno.jpg\";\n    }\n\n    window.titanic.onended = () => {\n      window.epicMusic.currentTime = 0;\n      window.epicMusic.play();\n      if (muted === false) window.epicMusic.volume = 0.05;\n    };\n\n    window.context.textAlign = \"left\";\n    window.context.fillText(\"Fall Distance: \", 10, 50);\n    window.context.fillText(falls, 200, 50);\n    player.draw();\n  } else if (end === true) {\n    player.reseted = true;\n    window.titanic.pause();\n    window.epicMusic.pause();\n    window.endMusic.play();\n    window.context.clearRect(0, 0, canvas.width, canvas.height);\n    window.context.drawImage(winnerBackground, 0, 0, canvas.width, canvas.height);\n    sideWrap(player);\n    collideTop(player);\n    player.friction = 0;\n    credits.draw();\n    player.draw();\n  }\n\n  window.volumeButton.draw();\n  window.context.drawImage(vol, canvas.width - vol.width - 35, vol.height, vol.width, vol.height);\n}\n\nfunction getLastFrame(currentFrame) {\n  return frames[currentFrame];\n}\n\nfunction inRangeX(player, object) {\n  let playerStart = player.x;\n  let playerEnd = player.x + player.width;\n  let objectStart = object.x;\n  let objectEnd = object.x + object.width;\n\n  if (playerStart < objectStart && playerStart < objectEnd && playerEnd < objectStart && playerEnd < objectEnd || playerStart > objectStart && playerStart > objectEnd && playerEnd > objectStart && playerEnd > objectEnd) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction inRangeY(player, object) {\n  let playerStart = player.y;\n  let playerEnd = player.y + player.height;\n  let objectStart = object.y;\n  let objectEnd = object.y + object.height;\n\n  if (playerStart < objectStart && playerStart < objectEnd && playerEnd < objectStart && playerEnd < objectEnd || playerStart > objectStart && playerStart > objectEnd && playerEnd > objectStart && playerEnd > objectEnd) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction collideSide(player) {\n  if (player.x + player.width + player.dx > canvas.width) {\n    player.x = canvas.width - player.width;\n    player.dx = -player.dx;\n  }\n\n  if (player.x + player.dx < 0) {\n    player.x = 0;\n    player.dx = -player.dx;\n  }\n}\n\nfunction collideTop(player) {\n  if (player.y + player.dy < 0 || player.y + player.dy > canvas.height) {\n    player.dy = -player.dy;\n  }\n}\n\nfunction sideWrap(player) {\n  if (player.x + player.width > canvas.width + 50) {\n    player.x = -player.width;\n  } else if (player.x < -player.width) {\n    player.x = canvas.width - player.width;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/credits.js":
/*!********************************!*\
  !*** ./src/scripts/credits.js ***!
  \********************************/
/***/ (function(module) {

eval("let luna = new Image();\nluna.src = \"./src/loony.png\";\n\nclass Credits {\n  constructor() {\n    this.x = 3 * canvas.width / 4;\n    this.y = canvas.height;\n  }\n\n  draw() {\n    let spacer = 60;\n    window.context.font = \"100px Arial\";\n    window.context.fillStyle = \"black\";\n    window.context.textAlign = \"center\";\n    window.context.fillText(\"You did it!!\", canvas.width / 4 - 1, canvas.height / 2 - 100 + 1);\n    window.context.fillStyle = \"white\";\n    window.context.textAlign = \"center\";\n    window.context.fillText(\"You did it!!\", canvas.width / 4, canvas.height / 2 - 100);\n    window.context.font = \"50px Arial\";\n    window.context.fillStyle = \"white\";\n    window.context.textAlight = \"center\";\n    window.context.fillText(\"Inspired By:\", this.x, this.y + spacer * 0);\n    window.context.fillText(\"Getting Over It\", this.x, this.y + spacer * 2);\n    window.context.fillText(\"Jump King\", this.x, this.y + spacer * 3);\n    window.context.fillText(\"Special Thanks To:\", this.x, this.y + spacer * 7);\n    window.context.fillText(\"David Oh - Y U NO\", this.x, this.y + spacer * 9);\n    window.context.fillText(\"Vern Chao - reverse controls idea\", this.x, this.y + spacer * 10);\n    window.context.fillText(\"Jimmy Kuang - titanic music idea\", this.x, this.y + spacer * 11);\n    window.context.fillText(\"Vincent Hsu - end screen idea\", this.x, this.y + spacer * 12);\n    window.context.fillText(\"Melissa Flynn - image debugging\", this.x, this.y + spacer * 13);\n    window.context.fillText(\"Zack Barbieri - reverse controls debugging\", this.x, this.y + spacer * 14);\n    window.context.fillText(\"Luna - my not so chonky dog\", this.x, this.y + spacer * 16);\n    window.context.drawImage(luna, this.x - luna.width / 2, this.y + spacer * 17, luna.width, luna.height);\n    window.context.fillText(\"Created By: Darrick Shin\", this.x, this.y + spacer * 24.5);\n    window.startButton.x = canvas.width / 4 - 150;\n    window.startButton.y = canvas.height / 2 + 20;\n    window.startButton.draw();\n    window.context.font = \"30px Arial\";\n    window.context.fillStyle = \"black\";\n    window.context.textAlign = \"center\";\n    window.context.fillText(\"Enter to Start Over\", canvas.width / 4, canvas.height / 2 + 78);\n    this.y--;\n  }\n\n}\n\nmodule.exports = Credits;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teV9wdWdfdG9vX2ZhdC8uL3NyYy9zY3JpcHRzL2NyZWRpdHMuanM/NjI2OSJdLCJuYW1lcyI6WyJsdW5hIiwiSW1hZ2UiLCJzcmMiLCJDcmVkaXRzIiwiY29uc3RydWN0b3IiLCJ4IiwiY2FudmFzIiwid2lkdGgiLCJ5IiwiaGVpZ2h0IiwiZHJhdyIsInNwYWNlciIsIndpbmRvdyIsImNvbnRleHQiLCJmb250IiwiZmlsbFN0eWxlIiwidGV4dEFsaWduIiwiZmlsbFRleHQiLCJ0ZXh0QWxpZ2h0IiwiZHJhd0ltYWdlIiwic3RhcnRCdXR0b24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJLEdBQUcsSUFBSUMsS0FBSixFQUFYO0FBQ0FELElBQUksQ0FBQ0UsR0FBTCxHQUFXLGlCQUFYOztBQUVBLE1BQU1DLE9BQU4sQ0FBYTtBQUNUQyxFQUFBQSxXQUFXLEdBQUU7QUFDVCxTQUFLQyxDQUFMLEdBQVMsSUFBSUMsTUFBTSxDQUFDQyxLQUFYLEdBQW1CLENBQTVCO0FBQ0EsU0FBS0MsQ0FBTCxHQUFTRixNQUFNLENBQUNHLE1BQWhCO0FBQ0g7O0FBRURDLEVBQUFBLElBQUksR0FBRTtBQUNGLFFBQUlDLE1BQU0sR0FBRyxFQUFiO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxJQUFmLEdBQXNCLGFBQXRCO0FBQ0FGLElBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlRSxTQUFmLEdBQTJCLE9BQTNCO0FBQ0FILElBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlRyxTQUFmLEdBQTJCLFFBQTNCO0FBQ0FKLElBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlSSxRQUFmLENBQXdCLGNBQXhCLEVBQXdDWCxNQUFNLENBQUNDLEtBQVAsR0FBZSxDQUFmLEdBQW1CLENBQTNELEVBQThERCxNQUFNLENBQUNHLE1BQVAsR0FBZSxDQUFmLEdBQW1CLEdBQW5CLEdBQXlCLENBQXZGO0FBR0FHLElBQUFBLE1B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d0IsMEJBQXhCLEVBQW9ELEtBQUtaLENBQXpELEVBQTRELEtBQUtHLENBQUwsR0FBU0csTUFBTSxHQUFHLElBQTlFO0FBRUFDLElBQUFBLE1BQU0sQ0FBQ1EsV0FBUCxDQUFtQmYsQ0FBbkIsR0FBdUJDLE1BQU0sQ0FBQ0MsS0FBUCxHQUFlLENBQWYsR0FBbUIsR0FBMUM7QUFDQUssSUFBQUEsTUFBTSxDQUFDUSxXQUFQLENBQW1CWixDQUFuQixHQUF3QkYsTUFBTSxDQUFDRyxNQUFQLEdBQWdCLENBQWpCLEdBQXNCLEVBQTdDO0FBQ0FHLElBQUFBLE1BQU0sQ0FBQ1EsV0FBUCxDQUFtQlYsSUFBbkI7QUFDQUUsSUFBQUEsTUFBTSxDQUFDQyxPQUFQLENBQWVDLElBQWYsR0FBc0IsWUFBdEI7QUFDQUYsSUFBQUEsTUFBTSxDQUFDQyxPQUFQLENBQWVFLFNBQWYsR0FBMkIsT0FBM0I7QUFDQUgsSUFBQUEsTUFBTSxDQUFDQyxPQUFQLENBQWVHLFNBQWYsR0FBMkIsUUFBM0I7QUFDQUosSUFBQUEsTUFBTSxDQUFDQyxPQUFQLENBQWVJLFFBQWYsQ0FBd0IscUJBQXhCLEVBQStDWCxNQUFNLENBQUNDLEtBQVAsR0FBZSxDQUE5RCxFQUFrRUQsTUFBTSxDQUFDRyxNQUFQLEdBQWUsQ0FBZixHQUFtQixFQUFyRjtBQUNBLFNBQUtELENBQUw7QUFDSDs7QUFyRFE7O0FBeURiYSxNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixPQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImxldCBsdW5hID0gbmV3IEltYWdlKCk7XG5sdW5hLnNyYyA9IFwiLi9zcmMvbG9vbnkucG5nXCJcblxuY2xhc3MgQ3JlZGl0c3tcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICB0aGlzLnggPSAzICogY2FudmFzLndpZHRoIC8gNFxuICAgICAgICB0aGlzLnkgPSBjYW52YXMuaGVpZ2h0O1xuICAgIH1cblxuICAgIGRyYXcoKXtcbiAgICAgICAgbGV0IHNwYWNlciA9IDYwO1xuICAgICAgICB3aW5kb3cuY29udGV4dC5mb250ID0gXCIxMDBweCBBcmlhbFwiO1xuICAgICAgICB3aW5kb3cuY29udGV4dC5maWxsU3R5bGUgPSBcImJsYWNrXCJcbiAgICAgICAgd2luZG93LmNvbnRleHQudGV4dEFsaWduID0gXCJjZW50ZXJcIjtcbiAgICAgICAgd2luZG93LmNvbnRleHQuZmlsbFRleHQoXCJZb3UgZGlkIGl0ISFcIiwgY2FudmFzLndpZHRoIC8gNCAtIDEsIGNhbnZhcy5oZWlnaHQgLzIgLSAxMDAgKyAxKVxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIHdpbmRvdy5jb250ZXh0LmZpbGxTdHlsZSA9IFwid2hpdGVcIlxuICAgICAgICB3aW5kb3cuY29udGV4dC50ZXh0QWxpZ24gPSBcImNlbnRlclwiO1xuICAgICAgICB3aW5kb3cuY29udGV4dC5maWxsVGV4dChcIllvdSBkaWQgaXQhIVwiLCBjYW52YXMud2lkdGggLyA0LCBjYW52YXMuaGVpZ2h0IC8yIC0gMTAwKVxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIHdpbmRvdy5jb250ZXh0LmZvbnQgPSBcIjUwcHggQXJpYWxcIlxuICAgICAgICB3aW5kb3cuY29udGV4dC5maWxsU3R5bGUgPSBcIndoaXRlXCJcbiAgICAgICAgd2luZG93LmNvbnRleHQudGV4dEFsaWdodCA9IFwiY2VudGVyXCJcblxuICAgICAgICB3aW5kb3cuY29udGV4dC5maWxsVGV4dChcIkluc3BpcmVkIEJ5OlwiLCB0aGlzLngsIHRoaXMueSArIHNwYWNlciAqIDApXG4gICAgICAgIHdpbmRvdy5jb250ZXh0LmZpbGxUZXh0KFwiR2V0dGluZyBPdmVyIEl0XCIsIHRoaXMueCwgdGhpcy55ICsgc3BhY2VyICogMilcbiAgICAgICAgd2luZG93LmNvbnRleHQuZmlsbFRleHQoXCJKdW1wIEtpbmdcIiwgdGhpcy54LCB0aGlzLnkgKyBzcGFjZXIgKiAzKVxuXG5cblxuXG5cbiAgICAgICAgd2luZG93LmNvbnRleHQuZmlsbFRleHQoXCJTcGVjaWFsIFRoYW5rcyBUbzpcIiwgdGhpcy54LCB0aGlzLnkgKyBzcGFjZXIgKiA3KVxuICAgICAgICB3aW5kb3cuY29udGV4dC5maWxsVGV4dChcIkRhdmlkIE9oIC0gWSBVIE5PXCIsIHRoaXMueCwgdGhpcy55ICsgc3BhY2VyICogOSlcbiAgICAgICAgd2luZG93LmNvbnRleHQuZmlsbFRleHQoXCJWZXJuIENoYW8gLSByZXZlcnNlIGNvbnRyb2xzIGlkZWFcIiwgdGhpcy54LCB0aGlzLnkgKyBzcGFjZXIgKiAxMClcbiAgICAgICAgd2luZG93LmNvbnRleHQuZmlsbFRleHQoXCJKaW1teSBLdWFuZyAtIHRpdGFuaWMgbXVzaWMgaWRlYVwiLCB0aGlzLngsIHRoaXMueSArIHNwYWNlciAqIDExKVxuICAgICAgICB3aW5kb3cuY29udGV4dC5maWxsVGV4dChcIlZpbmNlbnQgSHN1IC0gZW5kIHNjcmVlbiBpZGVhXCIsIHRoaXMueCwgdGhpcy55ICsgc3BhY2VyICogMTIpXG4gICAgICAgIHdpbmRvdy5jb250ZXh0LmZpbGxUZXh0KFwiTWVsaXNzYSBGbHlubiAtIGltYWdlIGRlYnVnZ2luZ1wiLCB0aGlzLngsIHRoaXMueSArIHNwYWNlciAqIDEzKVxuICAgICAgICB3aW5kb3cuY29udGV4dC5maWxsVGV4dChcIlphY2sgQmFyYmllcmkgLSByZXZlcnNlIGNvbnRyb2xzIGRlYnVnZ2luZ1wiLCB0aGlzLngsIHRoaXMueSArIHNwYWNlciAqIDE0KVxuXG5cbiAgICAgICAgd2luZG93LmNvbnRleHQuZmlsbFRleHQoXCJMdW5hIC0gbXkgbm90IHNvIGNob25reSBkb2dcIiwgdGhpcy54LCB0aGlzLnkgKyBzcGFjZXIgKiAxNilcbiAgICAgICAgd2luZG93LmNvbnRleHQuZHJhd0ltYWdlKGx1bmEsIHRoaXMueCAtIGx1bmEud2lkdGggLyAyLCB0aGlzLnkgKyBzcGFjZXIgKiAxNywgbHVuYS53aWR0aCwgbHVuYS5oZWlnaHQpXG5cbiAgICAgICAgd2luZG93LmNvbnRleHQuZmlsbFRleHQoXCJDcmVhdGVkIEJ5OiBEYXJyaWNrIFNoaW5cIiwgdGhpcy54LCB0aGlzLnkgKyBzcGFjZXIgKiAyNC41KVxuXG4gICAgICAgIHdpbmRvdy5zdGFydEJ1dHRvbi54ID0gY2FudmFzLndpZHRoIC8gNCAtIDE1MDtcbiAgICAgICAgd2luZG93LnN0YXJ0QnV0dG9uLnkgPSAoY2FudmFzLmhlaWdodCAvIDIpICsgMjBcbiAgICAgICAgd2luZG93LnN0YXJ0QnV0dG9uLmRyYXcoKTtcbiAgICAgICAgd2luZG93LmNvbnRleHQuZm9udCA9IFwiMzBweCBBcmlhbFwiO1xuICAgICAgICB3aW5kb3cuY29udGV4dC5maWxsU3R5bGUgPSBcImJsYWNrXCJcbiAgICAgICAgd2luZG93LmNvbnRleHQudGV4dEFsaWduID0gXCJjZW50ZXJcIjtcbiAgICAgICAgd2luZG93LmNvbnRleHQuZmlsbFRleHQoXCJFbnRlciB0byBTdGFydCBPdmVyXCIsIGNhbnZhcy53aWR0aCAvIDQgLCBjYW52YXMuaGVpZ2h0IC8yICsgNzgpXG4gICAgICAgIHRoaXMueS0tO1xuICAgIH1cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENyZWRpdHM7Il0sImZpbGUiOiIuL3NyYy9zY3JpcHRzL2NyZWRpdHMuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/credits.js\n");

/***/ }),

/***/ "./src/scripts/frame.js":
/*!******************************!*\
  !*** ./src/scripts/frame.js ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const Object = __webpack_require__(/*! ./object.js */ \"./src/scripts/object.js\"); // const Background = require('./background.js')\n\n\nclass Frame {\n  constructor(number, lastPlat = \"\") {\n    this.plats = [];\n    this.number = number;\n    this.lastPlat = lastPlat;\n    this.addPlatform();\n  }\n\n  addPlatform() {\n    if (this.number === 0) {\n      this.plats.push(new Object(0, canvas.height - 100, canvas.width, 100, \"black\"));\n      this.plats.push(new Object(canvas.width / 2, canvas.height - 150, 10, 10, \"lightgrey\"));\n      this.lastPlat = this.plats[this.plats.length - 1];\n    }\n\n    for (let i = 0; i < window.canvas.height / 190; i++) {\n      let rand = Math.random() < 0.5 ? -1 : 1; // random left or right;\n\n      let distance = (Math.random() * 100 + 200) * rand;\n      let x = this.lastPlat.x + distance;\n\n      if (x < 0) {\n        x = 50;\n      } else if (x > canvas.width - 100) {\n        x = canvas.width - 200;\n      }\n\n      let y = this.lastPlat.y - 190;\n\n      if (y < 0 && this.number != 0) {\n        y = canvas.height - 10;\n      }\n\n      let randWidth = Math.random() * canvas.width * 0.01 + 20;\n      let newObj = new Object(x, y, randWidth, canvas.height * 0.01, \"lightgrey\");\n      this.plats.push(newObj);\n      this.lastPlat = newObj;\n    }\n  }\n\n  draw() {\n    this.plats.forEach(plat => plat.draw());\n  }\n\n}\n\nmodule.exports = Frame;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQUwsRUFBM0I7QUFDSDs7QUExQ007O0FBNkNYRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ6QixLQUFqQiIsInNvdXJjZXMiOlsid2VicGFjazovL215X3B1Z190b29fZmF0Ly4vc3JjL3NjcmlwdHMvZnJhbWUuanM/ZDE0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBPYmplY3QgPSByZXF1aXJlKCcuL29iamVjdC5qcycpXG4vLyBjb25zdCBCYWNrZ3JvdW5kID0gcmVxdWlyZSgnLi9iYWNrZ3JvdW5kLmpzJylcblxuY2xhc3MgRnJhbWV7XG4gICAgY29uc3RydWN0b3IobnVtYmVyLCBsYXN0UGxhdCA9IFwiXCIpe1xuICAgICAgICB0aGlzLnBsYXRzID0gW107XG4gICAgICAgIHRoaXMubnVtYmVyID0gbnVtYmVyO1xuICAgICAgICB0aGlzLmxhc3RQbGF0ID0gbGFzdFBsYXQ7XG4gICAgICAgIHRoaXMuYWRkUGxhdGZvcm0oKTtcbiAgICB9XG4gICAgYWRkUGxhdGZvcm0oKXtcbiAgICAgICAgaWYgKHRoaXMubnVtYmVyID09PSAwKXtcbiAgICAgICAgICAgIHRoaXMucGxhdHMucHVzaCggbmV3IE9iamVjdCgwLCBjYW52YXMuaGVpZ2h0IC0gMTAwLCBjYW52YXMud2lkdGgsIDEwMCwgXCJibGFja1wiKSlcbiAgICAgICAgICAgIHRoaXMucGxhdHMucHVzaCggbmV3IE9iamVjdCggY2FudmFzLndpZHRoIC8gMiwgY2FudmFzLmhlaWdodCAtIDE1MCwgMTAsIDEwLCBcImxpZ2h0Z3JleVwiKSApXG4gICAgICAgICAgICB0aGlzLmxhc3RQbGF0ID0gdGhpcy5wbGF0c1t0aGlzLnBsYXRzLmxlbmd0aCAtIDFdO1xuICAgICAgICB9XG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCB3aW5kb3cuY2FudmFzLmhlaWdodC8gMTkwOyBpKyspe1xuICAgICAgICAgICAgbGV0IHJhbmQgPSBNYXRoLnJhbmRvbSgpIDwgMC41ID8gLTEgOiAxOyAvLyByYW5kb20gbGVmdCBvciByaWdodDtcbiAgICAgICAgICAgIGxldCBkaXN0YW5jZSA9IChNYXRoLnJhbmRvbSgpICogMTAwICsgMjAwKSAqIHJhbmRcbiAgICAgICAgICAgIGxldCB4ID0gKHRoaXMubGFzdFBsYXQueCArIGRpc3RhbmNlKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHggPCAwKSB7XG4gICAgICAgICAgICAgICAgeCA9IDUwO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh4ID4gY2FudmFzLndpZHRoIC0gMTAwKXtcbiAgICAgICAgICAgICAgICB4ID0gY2FudmFzLndpZHRoIC0gMjAwO1xuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbGV0IHkgPSB0aGlzLmxhc3RQbGF0LnkgLSAxOTA7XG4gICAgICAgICAgICBpZiAoeSA8IDAgJiYgdGhpcy5udW1iZXIgIT0gMCl7XG4gICAgICAgICAgICAgICAgeSA9IGNhbnZhcy5oZWlnaHQgLSAxMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGV0IHJhbmRXaWR0aCA9IE1hdGgucmFuZG9tKCkqY2FudmFzLndpZHRoICogMC4wMSArIDIwO1xuXG4gICAgICAgICAgICBsZXQgbmV3T2JqID0gbmV3IE9iamVjdCh4LCB5LCByYW5kV2lkdGgsIGNhbnZhcy5oZWlnaHQgKjAuMDEsIFwibGlnaHRncmV5XCIpXG4gICAgICAgICAgICB0aGlzLnBsYXRzLnB1c2gobmV3T2JqKTtcbiAgICAgICAgICAgIHRoaXMubGFzdFBsYXQgPSBuZXdPYmo7XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIGRyYXcoKXtcbiAgICAgICAgdGhpcy5wbGF0cy5mb3JFYWNoKHBsYXQgPT4gcGxhdC5kcmF3KCkpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBGcmFtZTsiXSwibmFtZXMiOlsiT2JqZWN0IiwicmVxdWlyZSIsIkZyYW1lIiwiY29uc3RydWN0b3IiLCJudW1iZXIiLCJsYXN0UGxhdCIsInBsYXRzIiwiYWRkUGxhdGZvcm0iLCJwdXNoIiwiY2FudmFzIiwiaGVpZ2h0Iiwid2lkdGgiLCJsZW5ndGgiLCJpIiwid2luZG93IiwicmFuZCIsIk1hdGgiLCJyYW5kb20iLCJkaXN0YW5jZSIsIngiLCJ5IiwicmFuZFdpZHRoIiwibmV3T2JqIiwiZHJhdyIsImZvckVhY2giLCJwbGF0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/frame.js\n");

/***/ }),

/***/ "./src/scripts/object.js":
/*!*******************************!*\
  !*** ./src/scripts/object.js ***!
  \*******************************/
/***/ (function(module) {

eval("class Object {\n  constructor(x, y, width, height, color, visible = true) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.color = color;\n    this.visible = visible;\n  }\n\n  draw() {\n    context.fillStyle = this.color;\n    context.lineWidth = 3;\n    context.strokeStyle = \"black\";\n    context.fillRect(this.x, this.y, this.width, this.height);\n    context.strokeRect(this.x, this.y, this.width, this.height);\n  }\n\n}\n\nmodule.exports = Object;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teV9wdWdfdG9vX2ZhdC8uL3NyYy9zY3JpcHRzL29iamVjdC5qcz9mOWZkIl0sIm5hbWVzIjpbIk9iamVjdCIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJ3aWR0aCIsImhlaWdodCIsImNvbG9yIiwidmlzaWJsZSIsImRyYXciLCJjb250ZXh0IiwiZmlsbFN0eWxlIiwibGluZVdpZHRoIiwic3Ryb2tlU3R5bGUiLCJmaWxsUmVjdCIsInN0cm9rZVJlY3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFOLENBQWE7QUFDVEMsRUFBQUEsV0FBVyxDQUFDQyxDQUFELEVBQUlDLENBQUosRUFBT0MsS0FBUCxFQUFjQyxNQUFkLEVBQXNCQyxLQUF0QixFQUE2QkMsT0FBTyxHQUFHLElBQXZDLEVBQTRDO0FBQ25ELFNBQUtMLENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLENBQUwsR0FBVUEsQ0FBVjtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtDLE1BQUwsR0FBY0EsTUFBZDtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtDLE9BQUwsR0FBZUEsT0FBZjtBQUVIOztBQUVEQyxFQUFBQSxJQUFJLEdBQUc7QUFDSEMsSUFBQUEsT0FBTyxDQUFDQyxTQUFSLEdBQW9CLEtBQUtKLEtBQXpCO0FBQ0FHLElBQUFBLE9BQU8sQ0FBQ0UsU0FBUixHQUFvQixDQUFwQjtBQUNBRixJQUFBQSxPQUFPLENBQUNHLFdBQVIsR0FBc0IsT0FBdEI7QUFDQUgsSUFBQUEsT0FBTyxDQUFDSSxRQUFSLENBQWlCLEtBQUtYLENBQXRCLEVBQXlCLEtBQUtDLENBQTlCLEVBQWlDLEtBQUtDLEtBQXRDLEVBQTZDLEtBQUtDLE1BQWxEO0FBQ0FJLElBQUFBLE9BQU8sQ0FBQ0ssVUFBUixDQUFtQixLQUFLWixDQUF4QixFQUEyQixLQUFLQyxDQUFoQyxFQUFtQyxLQUFLQyxLQUF4QyxFQUErQyxLQUFLQyxNQUFwRDtBQUNIOztBQWpCUTs7QUF1QmJVLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgT2JqZWN0IHtcclxuICAgIGNvbnN0cnVjdG9yKHgsIHksIHdpZHRoLCBoZWlnaHQsIGNvbG9yLCB2aXNpYmxlID0gdHJ1ZSl7XHJcbiAgICAgICAgdGhpcy54ID0geDtcclxuICAgICAgICB0aGlzLnkgPSAgeTtcclxuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IGNvbG9yO1xyXG4gICAgICAgIHRoaXMudmlzaWJsZSA9IHZpc2libGU7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGRyYXcgKCl7XHJcbiAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSB0aGlzLmNvbG9yO1xyXG4gICAgICAgIGNvbnRleHQubGluZVdpZHRoID0gMztcclxuICAgICAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gXCJibGFja1wiXHJcbiAgICAgICAgY29udGV4dC5maWxsUmVjdCh0aGlzLngsIHRoaXMueSwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpOyAgIFxyXG4gICAgICAgIGNvbnRleHQuc3Ryb2tlUmVjdCh0aGlzLngsIHRoaXMueSwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdDsiXSwiZmlsZSI6Ii4vc3JjL3NjcmlwdHMvb2JqZWN0LmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/object.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(module) {

eval("let right;\nlet left;\n\nclass Player {\n  constructor(x, y, src) {\n    this.x = x;\n    this.y = y;\n    this.rev = 1;\n    this.dx = 3 * this.rev;\n    this.dy = 6;\n    this.originalDx = 3;\n    this.maxDx = 10;\n    this.currentY = y;\n    this.friction = 0.1;\n    this.originalDy = 6;\n    this.maxHeight = this.y - 200;\n    this.maxVel = 5;\n    this.wind = 5;\n    this.reseted = false;\n\n    this.regKeysDown = event => {\n      this.keyDown(event);\n    };\n\n    this.regKeysUp = event => {\n      this.keyUp(event);\n    }; // image stuff\n\n\n    this.src = src;\n    this.cols = 10;\n    this.row = 1;\n    this.totalFrames = 10;\n    this.currentFrame = 0;\n    this.slowFrame = 2;\n    this.srcX = 0;\n    this.srcY = 0;\n    this.spriteWidth = this.src.width / this.cols;\n    this.spriteHeight = this.src.height / this.row;\n    this.width = this.spriteWidth;\n    this.height = this.spriteHeight;\n    this.timer = 5;\n    this.bindInputs();\n  }\n\n  reset() {\n    console.log('this happened');\n    this.x = 300;\n    this.y = canvas.height - 500;\n    this.rev = 1;\n    this.dx = 3 * this.rev;\n    this.dy = -6;\n    this.originalDx = 3;\n    this.maxDx = 10;\n    this.originalDy = 6;\n    this.friction = 0.1;\n    this.maxVel = 5;\n    this.wind = 5;\n  }\n\n  draw() {\n    context.fillStyle = 'rgba(225,225,225,0)'; // clear box\n\n    context.fillRect(this.x, this.y, this.width, this.height);\n    window.context.drawImage(this.src, this.srcX, this.srcY * this.spriteHeight, this.spriteWidth, this.spriteHeight, this.x, this.y, this.spriteWidth, this.spriteHeight);\n    this.animate(); // window.canvas.requestAnimationFrame(draw)\n  }\n\n  increaseFrame() {\n    if (this.timer > 0) {\n      this.timer -= 1;\n    } else {\n      this.currentFrame++;\n      this.timer = 5;\n    }\n  }\n\n  pugStep() {\n    this.increaseFrame();\n    this.currentFrame = this.currentFrame % this.totalFrames;\n    this.srcX = this.currentFrame * this.spriteWidth;\n  }\n\n  windEffect(direction) {\n    if (direction === 'left') {\n      this.x -= this.wind;\n    } else if (direction === 'right') {\n      this.x += this.wind;\n    }\n  }\n\n  animate() {\n    this.pugStep();\n\n    if (left) {\n      //sprite direction\n      if (this.src.src != \"src/scripts/small_rev.png\") {\n        this.src.src = \"src/scripts/small_rev.png\";\n      } //overwriting sprite on reverse\n\n\n      if (this.rev === -1) {\n        this.src.src = \"src/scripts/small.png\";\n      } //gradual movement\n\n\n      if (this.dx < this.maxDx) {\n        this.dx += this.friction;\n      }\n\n      this.x -= this.dx * this.rev;\n    } else if (right) {\n      //sprite direction\n      if (this.src.src != \"src/scripts/small.png\") {\n        this.src.src = \"src/scripts/small.png\";\n      } //overwriting sprite on reverse\n\n\n      if (this.rev === -1) {\n        this.src.src = \"src/scripts/small_rev.png\";\n      } //gradual movement\n\n\n      if (this.dx < this.maxDx) {\n        this.dx += this.friction;\n      }\n\n      this.x += this.dx * this.rev;\n    } else if (!left || !right) {\n      //resetting velocity on keyUp\n      this.dx = this.originalDx;\n    }\n\n    this.dy += this.friction;\n    this.y += this.dy;\n  } //Event Listeners\n\n\n  bindInputs() {\n    let that = this;\n    document.addEventListener(\"keyup\", that.regKeysUp);\n    document.addEventListener(\"keydown\", that.regKeysDown);\n  } //key handlers\n\n\n  keyDown(event) {\n    if (event.key === \"ArrowRight\" || event.key === \"d\") {\n      right = true;\n    } else if (event.key === \"ArrowLeft\" || event.key === \"a\") {\n      left = true;\n    }\n  }\n\n  keyUp(event) {\n    if (event.key === \"ArrowRight\" || event.key === \"d\") {\n      right = false;\n    } else if (event.key === \"ArrowLeft\" || event.key === \"a\") {\n      left = false;\n    }\n  }\n\n}\n\nmodule.exports = Player;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/wind.js":
/*!*****************************!*\
  !*** ./src/scripts/wind.js ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("const WindCircles = __webpack_require__(/*! ./windCircles.js */ \"./src/scripts/windCircles.js\");\n\nclass Wind {\n  constructor() {\n    this.time = 3000;\n    this.circles = [];\n    this.timer = 500;\n    this.state = 'right';\n    this.makeCircles();\n  }\n\n  draw() {\n    this.circles.forEach(circle => circle.draw());\n\n    if (this.timer < 0) {\n      this.changeState();\n      this.timer = 500;\n    } else {\n      this.timer--;\n    }\n\n    this.collision();\n  }\n\n  makeCircles() {\n    for (let i = 0; i < 10; i++) {\n      let randomX = Math.random() * window.canvas.width;\n      let randomY = Math.random() * window.canvas.height;\n      let randomDx = Math.random() * 10 + 10;\n      let randomRadius = Math.random() * 5 + 2;\n      let newCircle = new WindCircles(randomX, randomY, randomDx, randomRadius);\n      this.circles.push(newCircle);\n    }\n  }\n\n  changeState() {\n    if (this.state === \"right\") {\n      this.state = \"left\";\n    } else if (this.state === \"left\") {\n      this.state = \"right\";\n    }\n\n    this.circles.forEach(circle => circle.dx = -circle.dx);\n  }\n\n  collision() {\n    this.circles.forEach(circle => {\n      if (circle.x > canvas.width + circle.radius) {\n        circle.x = -circle.radius;\n      } else if (circle.x < -circle.radius) {\n        circle.x = canvas.width + circle.radius;\n      }\n    });\n  }\n\n}\n\nmodule.exports = Wind;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy93aW5kLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFdBQVcsR0FBR0MsbUJBQU8sQ0FBQyxzREFBRCxDQUEzQjs7QUFFQSxNQUFNQyxJQUFOLENBQVU7QUFDTkMsRUFBQUEsV0FBVyxHQUFFO0FBQ1QsU0FBS0MsSUFBTCxHQUFZLElBQVo7QUFDQSxTQUFLQyxPQUFMLEdBQWUsRUFBZjtBQUNBLFNBQUtDLEtBQUwsR0FBYSxHQUFiO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLE9BQWI7QUFDQSxTQUFLQyxXQUFMO0FBRUg7O0FBRURDLEVBQUFBLElBQUksR0FBRTtBQUNGLFNBQUtKLE9BQUwsQ0FBYUssT0FBYixDQUFxQkMsTUFBTSxJQUFJQSxNQUFNLENBQUNGLElBQVAsRUFBL0I7O0FBQ0EsUUFBSSxLQUFLSCxLQUFMLEdBQWEsQ0FBakIsRUFBbUI7QUFDZixXQUFLTSxXQUFMO0FBQ0EsV0FBS04sS0FBTCxHQUFhLEdBQWI7QUFDSCxLQUhELE1BR087QUFDSCxXQUFLQSxLQUFMO0FBQ0g7O0FBQ0QsU0FBS08sU0FBTDtBQUNIOztBQUVETCxFQUFBQSxXQUFXLEdBQUU7QUFDVCxTQUFJLElBQUlNLENBQUMsR0FBRyxDQUFaLEVBQWVBLENBQUMsR0FBRyxFQUFuQixFQUF1QkEsQ0FBQyxFQUF4QixFQUEyQjtBQUN2QixVQUFJQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsTUFBTCxLQUFjQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0MsS0FBMUM7QUFDQSxVQUFJQyxPQUFPLEdBQUdMLElBQUksQ0FBQ0MsTUFBTCxLQUFjQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0csTUFBMUM7QUFDQSxVQUFJQyxRQUFRLEdBQUdQLElBQUksQ0FBQ0MsTUFBTCxLQUFlLEVBQWYsR0FBb0IsRUFBbkM7QUFDQSxVQUFJTyxZQUFZLEdBQUdSLElBQUksQ0FBQ0MsTUFBTCxLQUFjLENBQWQsR0FBa0IsQ0FBckM7QUFDQSxVQUFJUSxTQUFTLEdBQUcsSUFBSXpCLFdBQUosQ0FBZ0JlLE9BQWhCLEVBQXlCTSxPQUF6QixFQUFrQ0UsUUFBbEMsRUFBNENDLFlBQTVDLENBQWhCO0FBQ0EsV0FBS25CLE9BQUwsQ0FBYXFCLElBQWIsQ0FBa0JELFNBQWxCO0FBQ0g7QUFDSjs7QUFFRGIsRUFBQUEsV0FBVyxHQUFFO0FBQ1QsUUFBRyxLQUFLTCxLQUFMLEtBQWUsT0FBbEIsRUFBMEI7QUFDdEIsV0FBS0EsS0FBTCxHQUFhLE1BQWI7QUFDSCxLQUZELE1BRU8sSUFBSSxLQUFLQSxLQUFMLEtBQWUsTUFBbkIsRUFBMEI7QUFDN0IsV0FBS0EsS0FBTCxHQUFhLE9BQWI7QUFDSDs7QUFFRCxTQUFLRixPQUFMLENBQWFLLE9BQWIsQ0FBcUJDLE1BQU0sSUFBSUEsTUFBTSxDQUFDZ0IsRUFBUCxHQUFZLENBQUNoQixNQUFNLENBQUNnQixFQUFuRDtBQUVIOztBQUVEZCxFQUFBQSxTQUFTLEdBQUU7QUFDUCxTQUFLUixPQUFMLENBQWFLLE9BQWIsQ0FBcUJDLE1BQU0sSUFBSTtBQUMzQixVQUFJQSxNQUFNLENBQUNpQixDQUFQLEdBQVdULE1BQU0sQ0FBQ0MsS0FBUCxHQUFlVCxNQUFNLENBQUNrQixNQUFyQyxFQUE0QztBQUN4Q2xCLFFBQUFBLE1BQU0sQ0FBQ2lCLENBQVAsR0FBVyxDQUFDakIsTUFBTSxDQUFDa0IsTUFBbkI7QUFDSCxPQUZELE1BRU8sSUFBSWxCLE1BQU0sQ0FBQ2lCLENBQVAsR0FBVyxDQUFDakIsTUFBTSxDQUFDa0IsTUFBdkIsRUFBOEI7QUFDakNsQixRQUFBQSxNQUFNLENBQUNpQixDQUFQLEdBQVdULE1BQU0sQ0FBQ0MsS0FBUCxHQUFlVCxNQUFNLENBQUNrQixNQUFqQztBQUNIO0FBQ0osS0FORDtBQU9IOztBQW5ESzs7QUFzRFZDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjdCLElBQWpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXlfcHVnX3Rvb19mYXQvLi9zcmMvc2NyaXB0cy93aW5kLmpzPzFiNzIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgV2luZENpcmNsZXMgPSByZXF1aXJlKCcuL3dpbmRDaXJjbGVzLmpzJylcblxuY2xhc3MgV2luZHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICB0aGlzLnRpbWUgPSAzMDAwO1xuICAgICAgICB0aGlzLmNpcmNsZXMgPSBbXTtcbiAgICAgICAgdGhpcy50aW1lciA9IDUwMDtcbiAgICAgICAgdGhpcy5zdGF0ZSA9ICdyaWdodCc7XG4gICAgICAgIHRoaXMubWFrZUNpcmNsZXMoKTtcblxuICAgIH1cblxuICAgIGRyYXcoKXtcbiAgICAgICAgdGhpcy5jaXJjbGVzLmZvckVhY2goY2lyY2xlID0+IGNpcmNsZS5kcmF3KCkpO1xuICAgICAgICBpZiAodGhpcy50aW1lciA8IDApe1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VTdGF0ZSgpO1xuICAgICAgICAgICAgdGhpcy50aW1lciA9IDUwMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudGltZXItLTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbGxpc2lvbigpO1xuICAgIH1cblxuICAgIG1ha2VDaXJjbGVzKCl7XG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCAxMDsgaSsrKXtcbiAgICAgICAgICAgIGxldCByYW5kb21YID0gTWF0aC5yYW5kb20oKSp3aW5kb3cuY2FudmFzLndpZHRoO1xuICAgICAgICAgICAgbGV0IHJhbmRvbVkgPSBNYXRoLnJhbmRvbSgpKndpbmRvdy5jYW52YXMuaGVpZ2h0O1xuICAgICAgICAgICAgbGV0IHJhbmRvbUR4ID0gTWF0aC5yYW5kb20oKSogMTAgKyAxMDtcbiAgICAgICAgICAgIGxldCByYW5kb21SYWRpdXMgPSBNYXRoLnJhbmRvbSgpKjUgKyAyO1xuICAgICAgICAgICAgbGV0IG5ld0NpcmNsZSA9IG5ldyBXaW5kQ2lyY2xlcyhyYW5kb21YLCByYW5kb21ZLCByYW5kb21EeCwgcmFuZG9tUmFkaXVzKVxuICAgICAgICAgICAgdGhpcy5jaXJjbGVzLnB1c2gobmV3Q2lyY2xlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNoYW5nZVN0YXRlKCl7XG4gICAgICAgIGlmKHRoaXMuc3RhdGUgPT09IFwicmlnaHRcIil7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gXCJsZWZ0XCJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnN0YXRlID09PSBcImxlZnRcIil7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gXCJyaWdodFwiXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNpcmNsZXMuZm9yRWFjaChjaXJjbGUgPT4gY2lyY2xlLmR4ID0gLWNpcmNsZS5keClcbiAgICBcbiAgICB9XG5cbiAgICBjb2xsaXNpb24oKXtcbiAgICAgICAgdGhpcy5jaXJjbGVzLmZvckVhY2goY2lyY2xlID0+IHtcbiAgICAgICAgICAgIGlmIChjaXJjbGUueCA+IGNhbnZhcy53aWR0aCArIGNpcmNsZS5yYWRpdXMpe1xuICAgICAgICAgICAgICAgIGNpcmNsZS54ID0gLWNpcmNsZS5yYWRpdXM7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNpcmNsZS54IDwgLWNpcmNsZS5yYWRpdXMpe1xuICAgICAgICAgICAgICAgIGNpcmNsZS54ID0gY2FudmFzLndpZHRoICsgY2lyY2xlLnJhZGl1c1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBXaW5kOyJdLCJuYW1lcyI6WyJXaW5kQ2lyY2xlcyIsInJlcXVpcmUiLCJXaW5kIiwiY29uc3RydWN0b3IiLCJ0aW1lIiwiY2lyY2xlcyIsInRpbWVyIiwic3RhdGUiLCJtYWtlQ2lyY2xlcyIsImRyYXciLCJmb3JFYWNoIiwiY2lyY2xlIiwiY2hhbmdlU3RhdGUiLCJjb2xsaXNpb24iLCJpIiwicmFuZG9tWCIsIk1hdGgiLCJyYW5kb20iLCJ3aW5kb3ciLCJjYW52YXMiLCJ3aWR0aCIsInJhbmRvbVkiLCJoZWlnaHQiLCJyYW5kb21EeCIsInJhbmRvbVJhZGl1cyIsIm5ld0NpcmNsZSIsInB1c2giLCJkeCIsIngiLCJyYWRpdXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/wind.js\n");

/***/ }),

/***/ "./src/scripts/windCircles.js":
/*!************************************!*\
  !*** ./src/scripts/windCircles.js ***!
  \************************************/
/***/ (function(module) {

eval("class WindCircles {\n  constructor(x, y, dx, radius) {\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.radius = radius;\n    this.friction = 0.2;\n  }\n\n  draw() {\n    this.circleStep();\n    window.context.beginPath();\n    window.context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    window.context.fillStyle = 'rgba(255, 255, 255, .30)';\n    window.context.fill();\n    window.context.strokeStyle = 'rgba(255, 255, 255, .10)';\n    window.context.stroke();\n  }\n\n  circleStep() {\n    this.x += this.dx * this.friction;\n  }\n\n}\n\nmodule.exports = WindCircles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teV9wdWdfdG9vX2ZhdC8uL3NyYy9zY3JpcHRzL3dpbmRDaXJjbGVzLmpzPzg1YTUiXSwibmFtZXMiOlsiV2luZENpcmNsZXMiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwiZHgiLCJyYWRpdXMiLCJmcmljdGlvbiIsImRyYXciLCJjaXJjbGVTdGVwIiwid2luZG93IiwiY29udGV4dCIsImJlZ2luUGF0aCIsImFyYyIsIk1hdGgiLCJQSSIsImZpbGxTdHlsZSIsImZpbGwiLCJzdHJva2VTdHlsZSIsInN0cm9rZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFdBQU4sQ0FBaUI7QUFDYkMsRUFBQUEsV0FBVyxDQUFDQyxDQUFELEVBQUlDLENBQUosRUFBT0MsRUFBUCxFQUFXQyxNQUFYLEVBQWtCO0FBQ3pCLFNBQUtILENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLEVBQUwsR0FBVUEsRUFBVjtBQUNBLFNBQUtDLE1BQUwsR0FBY0EsTUFBZDtBQUNBLFNBQUtDLFFBQUwsR0FBZ0IsR0FBaEI7QUFDSDs7QUFFREMsRUFBQUEsSUFBSSxHQUFFO0FBQ0YsU0FBS0MsVUFBTDtBQUNBQyxJQUFBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsU0FBZjtBQUNBRixJQUFBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZUUsR0FBZixDQUFtQixLQUFLVixDQUF4QixFQUEyQixLQUFLQyxDQUFoQyxFQUFtQyxLQUFLRSxNQUF4QyxFQUFnRCxDQUFoRCxFQUFtRFEsSUFBSSxDQUFDQyxFQUFMLEdBQVEsQ0FBM0QsRUFBOEQsS0FBOUQ7QUFDQUwsSUFBQUEsTUFBTSxDQUFDQyxPQUFQLENBQWVLLFNBQWYsR0FBMkIsMEJBQTNCO0FBQ0FOLElBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlTSxJQUFmO0FBQ0FQLElBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlTyxXQUFmLEdBQTZCLDBCQUE3QjtBQUNBUixJQUFBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZVEsTUFBZjtBQUNIOztBQUVEVixFQUFBQSxVQUFVLEdBQUU7QUFDUixTQUFLTixDQUFMLElBQVUsS0FBS0UsRUFBTCxHQUFVLEtBQUtFLFFBQXpCO0FBQ0g7O0FBckJZOztBQXVCakJhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLFdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgV2luZENpcmNsZXN7XG4gICAgY29uc3RydWN0b3IoeCwgeSwgZHgsIHJhZGl1cyl7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHRoaXMuZHggPSBkeDtcbiAgICAgICAgdGhpcy5yYWRpdXMgPSByYWRpdXNcbiAgICAgICAgdGhpcy5mcmljdGlvbiA9IDAuMjtcbiAgICB9XG5cbiAgICBkcmF3KCl7XG4gICAgICAgIHRoaXMuY2lyY2xlU3RlcCgpO1xuICAgICAgICB3aW5kb3cuY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgd2luZG93LmNvbnRleHQuYXJjKHRoaXMueCwgdGhpcy55LCB0aGlzLnJhZGl1cywgMCwgTWF0aC5QSSoyLCBmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5jb250ZXh0LmZpbGxTdHlsZSA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIC4zMCknXG4gICAgICAgIHdpbmRvdy5jb250ZXh0LmZpbGwoKTtcbiAgICAgICAgd2luZG93LmNvbnRleHQuc3Ryb2tlU3R5bGUgPSAncmdiYSgyNTUsIDI1NSwgMjU1LCAuMTApJ1xuICAgICAgICB3aW5kb3cuY29udGV4dC5zdHJva2UoKTtcbiAgICB9XG5cbiAgICBjaXJjbGVTdGVwKCl7XG4gICAgICAgIHRoaXMueCArPSB0aGlzLmR4ICogdGhpcy5mcmljdGlvbjtcbiAgICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IFdpbmRDaXJjbGVzOyJdLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy93aW5kQ2lyY2xlcy5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/windCircles.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teV9wdWdfdG9vX2ZhdC8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;